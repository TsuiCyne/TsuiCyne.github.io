<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Beluga：Q&amp;A</title>
    <url>/QT000002/</url>
    <content><![CDATA[<p><em>#QT000002</em><br>博客相关设定使用答疑</p>
<a id="more"></a>

<h1 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h1><h2 id="Q：为何要填写昵称与邮箱"><a href="#Q：为何要填写昵称与邮箱" class="headerlink" title="Q：为何要填写昵称与邮箱"></a>Q：为何要填写昵称与邮箱</h2><p>A：<br>网站采用Valine评论系统，其通过昵称与邮箱来识别是否为同一用户<br>为了多人讨论中便于识别沟通，避免同个人多次评论被当作多个人评论情况出现，特此规定<br>倘若您想要更改昵称/邮箱，请邮件与我取得联系</p>
<blockquote>
<p>承诺：未经您允许，不会收集个人信息用于其他用途</p>
</blockquote>
<h2 id="Q：怎么设置头像"><a href="#Q：怎么设置头像" class="headerlink" title="Q：怎么设置头像"></a>Q：怎么设置头像</h2><p>A：<br>网站采用Valine评论系统，其使用Gravatar作为评论列表头像<br>请自行注册<a href="https://www.gravatar.com/" target="_blank" rel="noopener">Gravatar</a>修改自己的头像，评论的时候，留下注册时所使用的邮箱即可</p>
<blockquote>
<p>注：如果修改了头像后发现没有更新，请不要慌张，因为gravatar.cat.net有缓存期，请耐心等待</p>
</blockquote>
<br/>

<hr>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>Git：最强分布式版本控制系统</title>
    <url>/BJ200323/</url>
    <content><![CDATA[<p><em>#BJ200323</em><br>Git作为目前这个世界上最强的分布式版本管理系统，还不赶紧学习起来。该文章主要是我学习廖老师的Git教程时所作笔记，对原文进行了一些删减整理，条理更加清晰。文章面向初学者，没有接触过版本控制概念的同学也能轻松理解，不必担心上手难度。</p>
<a id="more"></a>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<h1 id="Git是什么"><a href="#Git是什么" class="headerlink" title="Git是什么"></a>Git是什么</h1><p>你是否有过以下经历</p>
<p><strong>情景一</strong>：写文章的时候，想删除一个段落，又怕将来想恢复找不回来，就先把当前文件另存为一个新文件，接着改，改到一定程度，再另存为一个新文件，这样一直改下去，最后你就发现了你有几百个不同版本的文件。过了一周，你看着这五花八门的名字，根本不记得每个之间的差异，想删又不敢删</p>
<p><strong>情景二</strong>：辅导员发给你一份统计各个宿舍学生表格，需要宿舍负责人填写。他们都把表格交给你后，你得想想他们对表格做了哪些改动有没有把格式给改了，然后再把所有表格合并成一个完整大表格，十分麻烦</p>
<p>于是你就会想是否有这样一个软件，不但能自动帮我记录每次文件的改动，还可以让同学协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便，前文所说的就是Git所干的事</p>
<h2 id="Git的前世今生"><a href="#Git的前世今生" class="headerlink" title="Git的前世今生"></a>Git的前世今生</h2><p>很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码。你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了，于是BitMover公司怒了，要收回Linux社区的免费使用权。Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git。一个月之内，Linux系统的源码已经由Git管理了。Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等</p>
<h2 id="集中式与分布式"><a href="#集中式与分布式" class="headerlink" title="集中式与分布式"></a>集中式与分布式</h2><p><strong>集中式版本控制系统</strong>：<br>版本库集中存放在中央服务器，干活时用的都是自己的电脑，要先从中央服务器取得最新的版本，然后开始干活，干完活了，再推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回家自己改，改完了，再放回图书馆</p>
<img src="/BJ200323/CVM.jpg" class="">

<p><strong>分布式版本控制系统</strong>：<br>没有中央服务器，每个人的电脑上都是一个完整的版本库，这样工作时就不需要联网了。那这样如何多人协作呢？比方说你在自己电脑上改了文件A，你的同学也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了</p>
<img src="/BJ200323/DVM.jpg" class="">

<p><strong>两者差异</strong>：<br>集中式版本控制系统最大的毛病就是必须联网才能工作，如果在局域网内还好，带宽够大，速度够快，可如果在互联网上，遇到网速慢的话，可能提交一个10M的文件就需要5分钟。还有和集中式相比，分布式的安全性要高很多，因为每个人都有完整版本库，某个电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。在实际使用分布式版本控制系统的时候，其实很少在两人之间的电脑上推送版本库的修改，因为可能你们俩不在一个局域网内，两台电脑互相访问不了，也可能今天你的同事病了，他的电脑压根没有开机。因此，分布式版本控制系统通常也有一台电脑充当中央服务器，但其作用仅仅是用来交换修改，没有它大家也一样干活，只是交换修改不方便而已</p>
<h1 id="Git使用"><a href="#Git使用" class="headerlink" title="Git使用"></a>Git使用</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>查看系统有无Git</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git</span><br><span class="line">The program &#39;git&#39; is currently not installed. You can install it by typing:</span><br><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure>
<p>系统没有安装Git，我们可以直接按照提示进行安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Debian&#x2F;Ubuntu</span><br><span class="line">$ aptitude install git</span><br><span class="line"></span><br><span class="line">#Fedora&#x2F;CentOS&#x2F;Redhat</span><br><span class="line">$ dnf install git</span><br></pre></td></tr></table></figure>
<p>也可直接去Git官网下载源码安装：下载、解压、<code>./config</code>、<code>make</code>、<code>make install</code></p>
<p>安装完成后，还需要设置用户名与邮箱</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;YourName&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：用了<code>--global</code>参数，表示所有的Git仓库都会使用这个配置，也可以对某个仓库指定不同的用户名和邮箱</p>
</blockquote>
<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>仓库又叫版本库（repository），就是Git管理的目录，可以追踪每个文件的修改、删除、添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#在目标目录下</span><br><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in &#x2F;usr&#x2F;TestGit&#x2F;.git&#x2F;</span><br></pre></td></tr></table></figure>
<p>初始化后可以发现目录下多了一个<code>.git</code>的隐藏文件夹，用来追踪管理该仓库</p>
<h2 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h2><p>所有的版本控制系统，其实只能跟踪文本文件的改动，如TXT文件，网页，程序代码等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了“Linux”，在第8行删了“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化</p>
<blockquote>
<p>注：Word格式是二进制格式，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件</p>
</blockquote>
<p>现在我们编写一个文件<code>readme.txt</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ touch readme.txt</span><br><span class="line">$ vim readme.txt </span><br><span class="line">Git is a version control system.</span><br><span class="line">Git is free software.</span><br></pre></td></tr></table></figure>
<p>添加到仓库（1/2）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git add readme.txt</span><br></pre></td></tr></table></figure>
<p>添加到仓库（2/2）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git commit -m &quot;wrote a readme file&quot;</span><br><span class="line">[master (root-commit) eaadf4e] wrote a readme file</span><br><span class="line"> 1 file changed, 2 insertions(+)        #1个文件被修改，插入2行内容</span><br><span class="line"> create mode 100644 readme.txt</span><br><span class="line"></span><br><span class="line"> 参数：</span><br><span class="line"> -m：后面输入本次提交说明</span><br></pre></td></tr></table></figure>
<p>可以多次使用<code>git add</code>后，再统一<code>git commit</code>提交</p>
<h2 id="查看修改"><a href="#查看修改" class="headerlink" title="查看修改"></a>查看修改</h2><p>修改<code>readme.txt</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Git is a distributed version control system.    #加入distributed</span><br><span class="line">Git is free software.</span><br></pre></td></tr></table></figure>
<p>现在，运行<code>git status</code>，查看结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">	modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and&#x2F;or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>
<p><code>git status</code>：查看仓库当前状态，上面显示告诉我们，<code>readme.txt</code>被修改了，但尚未提交</p>
<p>这时，我们可以使用<code>git diff</code>来查看具体修改内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git diff readme.txt</span><br><span class="line">diff --git a&#x2F;readme.txt b&#x2F;readme.txt</span><br><span class="line">index 46d49bf..9247db6 100644</span><br><span class="line">--- a&#x2F;readme.txt</span><br><span class="line">+++ b&#x2F;readme.txt</span><br><span class="line">@@ -1,2 +1,2 @@</span><br><span class="line">-Git is a version control system.</span><br><span class="line">+Git is a distributed version control system.</span><br><span class="line"> Git is free software.</span><br></pre></td></tr></table></figure>
<p>知道做了什么修改后，放心地提交</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git add readme.txt</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">	modified:   readme.txt</span><br><span class="line">$ git commit -m &quot;add distributed&quot;</span><br><span class="line">[master e475afc] add distributed</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure>
<h2 id="版本切换"><a href="#版本切换" class="headerlink" title="版本切换"></a>版本切换</h2><p>每当你觉得文件修改到一定程度的时候，就可以保存一个commit（快照）。一旦你把文件改乱了，或者误删了文件，还可以从最近一个恢复，继续工作<br>现在我们查看一下前面提交的版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit e475afc93c209a690c39c13a46716e8fa000c366 (HEAD -&gt; master)</span><br><span class="line">Author: YourName &lt;email@example.com&gt;</span><br><span class="line">Date:   Fri May 18 21:03:36 2018 +0800</span><br><span class="line"></span><br><span class="line">    add distributed</span><br><span class="line"></span><br><span class="line">commit eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0</span><br><span class="line">Author: YourName &lt;email@example.com&gt;</span><br><span class="line">Date:   Fri May 18 20:59:18 2018 +0800</span><br><span class="line"></span><br><span class="line">    wrote a readme file</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">--pretty&#x3D;oneline：简化信息成一行</span><br></pre></td></tr></table></figure>
<p>我们可以看到有2次提交，<code>e475af...</code>这个是<code>commit_id</code>，是由SHA1算法得到的十六进制版本号<br>这时如果要回退到第一个版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git reset --hard HEAD^</span><br><span class="line">或</span><br><span class="line">$ git reset --hard eaadf4e      #commit_id不用全部输完</span><br><span class="line">HEAD is now at eaadf4e add distributed</span><br></pre></td></tr></table></figure>
<p><code>HEAD</code>表示当前版本<br><code>HEAD^</code>表示<code>HEAD</code>的前一个版本，以此类推<code>HEAD^^</code>表示<code>HEAD</code>的前两个版本<br><code>HEAD~100</code>则表示前100个版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌────┐</span><br><span class="line">│HEAD│</span><br><span class="line">└────┘</span><br><span class="line">   │</span><br><span class="line">   │    ○ add distributed           #第二版本</span><br><span class="line">   │    │</span><br><span class="line">   └──&gt; ○ wrote a readme file       #第一版本</span><br></pre></td></tr></table></figure>
<p>原来，Git中的版本切换实际上是移动<code>HEAD</code>指针的指向位置，指向的位置就是当前版本<br>这时我们再查看内容，发现果然还原到第一个版本，我们再查看提交记录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit eaadf4e385e865d25c48e7ca9c8395c3f7dfaef0 (HEAD -&gt; master)</span><br><span class="line">Author: YourName &lt;email@example.com&gt;</span><br><span class="line">Date:   Fri May 18 20:59:18 2018 +0800</span><br><span class="line"></span><br><span class="line">    wrote a readme file</span><br></pre></td></tr></table></figure>
<p>发现第二个版本已经没了，那我们如果还要切换回去该怎么做呢，倘若你还记得第二版本的<code>commit_id</code>，那我们就可以直接使用<code>git reset --hard commit_id</code>切换回去，你说你忘记了？好吧，那就只能用<code>git relog</code>来查询了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git reflog</span><br><span class="line">eaadf4e (HEAD -&gt; master) HEAD@&#123;1&#125;: reset: moving to HEAD^</span><br><span class="line">e475afc HEAD@&#123;2&#125;: commit: add distributed</span><br><span class="line">eaadf4e (HEAD -&gt; master) HEAD@&#123;3&#125;: commit (initial): wrote a readme file</span><br></pre></td></tr></table></figure>
<p>我们可以看到我们有3次操作，第二版本号的前7位为<code>e475afc</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git reset --hard e475afc</span><br><span class="line">HEAD is now at e475afc add distributed</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">┌────┐</span><br><span class="line">│HEAD│</span><br><span class="line">└────┘</span><br><span class="line">   │</span><br><span class="line">   └──&gt; ○ add distributed           #第二版本</span><br><span class="line">        │</span><br><span class="line">        ○ wrote a readme file       #第一版本</span><br></pre></td></tr></table></figure>
<p>这样就切回到第二版本</p>
<h2 id="工作区与暂存区"><a href="#工作区与暂存区" class="headerlink" title="工作区与暂存区"></a>工作区与暂存区</h2><p><strong>工作区（Working Directory）</strong>：<br>就是电脑上看得见摸得着的工作目录</p>
<p><strong>版本库（Repository）</strong>：<br>隐藏文件夹<code>.git</code>就是该目录的版本库，其中主要包括</p>
<ul>
<li>暂存区（stage/index）</li>
<li>分支：如master</li>
<li>指针：<code>HEAD</code></li>
</ul>
<p>我们前面提到添加文件需要分<code>git add</code>、<code>git commit</code>两步</p>
<ul>
<li><code>git add</code>：将文件修改添加到暂存区</li>
<li><code>git commit</code>：将暂存区所有内容提交到当前分支，当我们创建版本库时，Git自动为我们创建了master分支，所以默认提交到该分支上</li>
</ul>
<p>现在，我们再把<code>readme.txt</code>修改一下，再在工作区添加一个<code>LICENSE</code>文本文件，查看一下仓库状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">	modified:   readme.txt</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">	LICENSE</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and&#x2F;or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>
<p>从上面显示可以看出，<code>readme.txt</code>被修改，还有未追踪文件（Untracked files）<code>LICENSE</code><br>使用<code>git add</code>把它们俩都添加后，再查看仓库状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">	new file:   LICENSE</span><br><span class="line">	modified:   readme.txt</span><br></pre></td></tr></table></figure>
<p>当前仓库状态：</p>
<img src="/BJ200323/status_1.jpg" class="">
<p>这时我们就可以一次性把暂存区所有修改给提交到分支，再查看一下仓库状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure>
<p>当前仓库状态：</p>
<img src="/BJ200323/status_2.jpg" class="">

<h2 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h2><p>当你发现你的文件中有内容需要修改时，你会面临以下几种情况</p>
<ol>
<li>错误发生后还未<code>git add</code></li>
<li>错误发生后已经<code>git add</code>，还未<code>git commit</code></li>
<li>错误发生后不仅<code>git add</code>，还已<code>git commit</code></li>
</ol>
<p><strong>情况一</strong><br>这时发现及时很好解决</p>
<ul>
<li>直接手动删除错误</li>
<li>使用<code>git checkout -- &lt;file&gt;</code>丢弃工作区修改</li>
</ul>
<p><code>git checkout -- file</code>：让文件恢复到最近一次<code>git add</code>或<code>git commit</code>时提交的状态</p>
<p><strong>情况二</strong></p>
<ul>
<li>使用<code>git reset HEAD &lt;file&gt;</code>将暂存区修改退回到工作区，再配合[错误发生后还未<code>git add</code>]情况解决</li>
</ul>
<p><strong>情况三</strong></p>
<ul>
<li>使用版本切换，前提是没有推送到远程库</li>
</ul>
<h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><p>我们添加一个文件到仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git add test.txt</span><br><span class="line">$ git commit -m &quot;add test.txt&quot;</span><br><span class="line">[master b84166e] add test.txt</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 test.txt</span><br></pre></td></tr></table></figure>
<p>平时工作中，我们一般直接使用<code>rm</code>删除废弃文件，这时Git追踪到文件被删除，工作区与版本库不一致</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add&#x2F;rm &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">	deleted:    test.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and&#x2F;or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>
<p>这时只需使用<code>git rm</code>再<code>git add/commit</code>，文件就从版本库中删除<br>还有一种情况是删错了，而因为我们之前已经添加到仓库了，所以可以轻松使用<code>git checkout -- &lt;file&gt;</code>恢复</p>
<h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p>假设你准备开发一个新功能，需要两周才能完成，第一周你写了50%，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失进度风险<br>在前面我们已经知道，每次提交，都是沿着时间线，这条时间线就是一个分支。截止到目前，我们只有一条主分支，即master分支。严格来说，<code>HEAD</code>不是指向提交，而是指向master，master才指向提交。每次提交，分支都会向前移动一步，越来越长</p>
<img src="/BJ200323/branch_1.png" class="">

<p><strong>创建分支</strong><br>当我们创建新的分支，如dev时，Git就新建一个指针叫dev，指向与master相同的提交，再把<code>HEAD</code>指向dev，表示当前分支为dev</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git checkout -b dev          #也可以使用$ git switch -c dev</span><br><span class="line">Switched to a new branch &#39;dev&#39;</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-b：创建并切换，相当于</span><br><span class="line">    $ git branch dev</span><br><span class="line">    $ git checkout dev</span><br><span class="line">-c：同理</span><br></pre></td></tr></table></figure>
<img src="/BJ200323/branch_2.png" class="">

<p><strong>查询分支</strong><br>从现在开始，对工作区的修改和提交就都是在dev分支中，我们新提交一次，dev分支前进一步</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#查看当前分支</span><br><span class="line">$ git branch</span><br><span class="line">* dev</span><br><span class="line">  master</span><br><span class="line"></span><br><span class="line">$ git add readme.txt </span><br><span class="line">$ git commit -m &quot;branch test&quot;</span><br><span class="line">[dev b17d20e] branch test</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure>
<img src="/BJ200323/branch_3.png" class="">

<p><strong>切换分支</strong><br>假如这时我们切换回master分支，会发现刚刚更改的内容下不见了，因为那些都是在dev分支下的提交</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git checkout master       #也可以使用$ git switch master</span><br><span class="line">Switched to branch &#39;master&#39;</span><br></pre></td></tr></table></figure>
<img src="/BJ200323/branch_4.png" class="">

<p><strong>合并分支</strong><br>现在我们完成了在dev分支上的工作，就可以将dev分支合并回master分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git merge dev</span><br><span class="line">Updating d46f35e..b17d20e</span><br><span class="line">Fast-forward</span><br><span class="line"> readme.txt | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">Fast-forward：快进模式合并</span><br></pre></td></tr></table></figure>
<img src="/BJ200323/branch_5.png" class="">

<p>合并分支也不是每次都一帆风顺的，当dev分支与master分支都各自分别有新的提交时</p>
<img src="/BJ200323/branch_7.png" class="">
<p>这时Git将无法执行快速合并</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#处于master分支</span><br><span class="line">$ git merge dev</span><br><span class="line">Auto-merging readme.txt</span><br><span class="line">CONFLICT (content): Merge conflict in readme.txt</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br><span class="line"></span><br><span class="line">#也可以查询仓库状态</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Your branch is ahead of &#39;origin&#x2F;master&#39; by 2 commits.</span><br><span class="line">  (use &quot;git push&quot; to publish your local commits)</span><br><span class="line"></span><br><span class="line">You have unmerged paths.</span><br><span class="line">  (fix conflicts and run &quot;git commit&quot;)</span><br><span class="line">  (use &quot;git merge --abort&quot; to abort the merge)</span><br><span class="line"></span><br><span class="line">Unmerged paths:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)</span><br><span class="line"></span><br><span class="line">	both modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and&#x2F;or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>
<p>这时我们查看冲突文件<code>readme.txt</code>内容,发现文件底部变成这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Git is a distributed version control system.</span><br><span class="line">Git is free software distributed under the GPL.</span><br><span class="line">Git has a mutable index called stage.</span><br><span class="line">Git tracks changes of files.</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD    #master分支更改</span><br><span class="line">Creating a new branch is quick &amp; simple.</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">Creating a new branch is quick AND simple.</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; dev    #dev分支更改</span><br></pre></td></tr></table></figure>
<p>这时我们只需把不想要的内容删除修改成我们想要的结果，再<code>git add</code>、<code>git commit</code>即可</p>
<img src="/BJ200323/branch_7.png" class="">
<p>使用<code>git log --graph</code>查询合并结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git log --graph --pretty&#x3D;oneline --abbrev-commit</span><br><span class="line">*   cf810e4 (HEAD -&gt; master) conflict fixed</span><br><span class="line">|\  </span><br><span class="line">| * 14096d0 (dev) AND simple</span><br><span class="line">* | 5dc6824 &amp; simple</span><br><span class="line">|&#x2F;  </span><br><span class="line">* b17d20e branch test</span><br><span class="line">* e475afc add distributed</span><br><span class="line">* eaadf4e wrote a readme file</span><br></pre></td></tr></table></figure>

<p><strong>删除分支</strong><br>合并完成后，可以将dev分支删去，这时我们剩下master分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git branch -d dev</span><br><span class="line">Deleted branch dev (was b17d20e).</span><br></pre></td></tr></table></figure>
<img src="/BJ200323/branch_8.png" class="">

<p><strong>分支策略</strong><br>合并分支如果是<code>Fast forward</code>模式，再你删除分支后，会丢失分支信息，我们可以使用<code>--no-ff</code>参数来禁用<code>Fast forward</code>模式，这样会在合并时生成一个新的commit，让我们可以在分支历史上查看到分支信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git merge --no-ff -m &quot;merge with no-ff&quot; dev</span><br><span class="line">Merge made by the &#39;recursive&#39; strategy.</span><br><span class="line"> readme.txt | 1 +</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">因为这次合并会生成一个commit，所以要加上-m描述信息</span><br><span class="line"></span><br><span class="line">$ git log --graph --pretty&#x3D;oneline --abbrev-commit</span><br><span class="line">*   e1e9c68 (HEAD -&gt; master) merge with no-ff</span><br><span class="line">|\  </span><br><span class="line">| * f52c633 (dev) add merge</span><br><span class="line">|&#x2F;  </span><br><span class="line">*   cf810e4 conflict fixed</span><br></pre></td></tr></table></figure>
<img src="/BJ200323/branch_9.png" class="">
<p>在实际开发中，我们应该按照几个基本原则进行分支管理</p>
<ul>
<li>master分支：它应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活</li>
<li>dev分支：干活分支，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本</li>
<li>个人分支：你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并<img src="/BJ200323/branch_10.png" class="">

</li>
</ul>
<p><strong>BUG分支</strong><br>当你接到一个修复一个代号101的bug的任务时，你想创建一个分支issue-101来修复它，但是，当前正在dev上进行的工作还没有提交</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch dev</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">	new file:   hello.py</span><br><span class="line"></span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">	modified:   readme.txt</span><br></pre></td></tr></table></figure>
<p>工作只进行到一半，还没法提交，预计还要1天时间。但是BUG必须在2小时内修复，这时候可以使用<code>git stash</code>保存现场</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git stash</span><br><span class="line">Saved working directory and index state WIP on dev: f52c633 add merge</span><br></pre></td></tr></table></figure>
<p>这时再查询工作区，发现是干净的，可以放心创建分支修复BUG，修复完成后，查看刚刚储存的工作现场</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git stash list</span><br><span class="line">stash@&#123;0&#125;: WIP on dev: f52c633 add merge</span><br></pre></td></tr></table></figure>
<p>恢复工作现场</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git stash apply</span><br><span class="line">$ git stash pop</span><br><span class="line">前者恢复后，stash内容并不删除，需要用git stash drop来删除</span><br><span class="line">后者恢复同时把stash内容也删了</span><br></pre></td></tr></table></figure>
<p>假如你是在master分支上修复了BUG，欸那dev上还得再重复一遍相同的操作，这也太不方便了。别担心我们可以用<code>cherry-pick</code>把修复BUG<code>fix bug 101</code>这个提交的修改给复制到过来，注意这里只复制这单次提交，并不是把整个分支合并过来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">* dev</span><br><span class="line">  master</span><br><span class="line">$ git cherry-pick 4c805e2</span><br><span class="line">[master 1d4b803] fix bug 101</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br></pre></td></tr></table></figure>

<h2 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h2><p>发布一个版本时，我们通常会在版本库里打一个标签，你可以把它理解成另种形式的commit注释信息<br>标签总是个commit挂钩，如果其出现在多个分支，那么这些分支均能看到</p>
<p><strong>创建标签</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#创建时未指定默认打在最新commit</span><br><span class="line">$ git tag v1.0</span><br><span class="line"></span><br><span class="line">#也可以在后面加入commit_id指定</span><br><span class="line">$ git tag v0.9 f52c633</span><br><span class="line"></span><br><span class="line">#创建带注释的标签</span><br><span class="line">$ git tag -a v0.1 -m &quot;version 0.1 released&quot; 1094adb</span><br></pre></td></tr></table></figure>

<p><strong>查看标签</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#查看所有标签</span><br><span class="line">$ git tag</span><br><span class="line">v0.9</span><br><span class="line">v1.0</span><br><span class="line"></span><br><span class="line">#查看指定标签信息</span><br><span class="line">$ git show v0.9</span><br><span class="line">commit f52c63349bc3c1593499807e5c8e972b82c8f286 (tag: v0.9)</span><br><span class="line">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</span><br><span class="line">Date:   Fri May 18 21:56:54 2018 +0800</span><br><span class="line"></span><br><span class="line">    add merge</span><br><span class="line"></span><br><span class="line">diff --git a&#x2F;readme.txt b&#x2F;readme.txt</span><br></pre></td></tr></table></figure>

<p><strong>删除标签</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#删除本地标签</span><br><span class="line">$ git tag -d v0.1</span><br><span class="line">Deleted tag &#39;v0.1&#39; (was f15b0dd)</span><br><span class="line"></span><br><span class="line">#删除远程标签</span><br><span class="line">$ git tag -d v0.9</span><br><span class="line">Deleted tag &#39;v0.9&#39; (was f52c633)</span><br><span class="line">$ git push origin :refs&#x2F;tags&#x2F;v0.9</span><br><span class="line">To github.com:michaelliao&#x2F;learngit.git</span><br><span class="line"> - [deleted]         v0.9</span><br></pre></td></tr></table></figure>

<p><strong>推送标签</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#推送指定标签</span><br><span class="line">$ git push origin v1.0</span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class="line">To github.com:michaelliao&#x2F;learngit.git</span><br><span class="line"> * [new tag]         v1.0 -&gt; v1.0</span><br><span class="line"></span><br><span class="line">#推送所有未推送标签</span><br><span class="line"> $ git push origin --tags</span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class="line">To github.com:michaelliao&#x2F;learngit.git</span><br><span class="line"> * [new tag]         v0.9 -&gt; v0.9</span><br></pre></td></tr></table></figure>

<h1 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h1><p>Git是分布式版本控制系统，同一个仓库，可以分布到不同的机器上。实际情况往往是这样，找一台电脑充当服务器，其他每个人都从服务器仓库克隆一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交。不过也不一定要自己搭建服务器，因为现在有挺多网站都有提供仓库托管服务，例如Github，我们只需要注册好GitHub账号，配置一下SSH就可以使用了。</p>
<p><strong>添加远程库</strong><br>首先将本地库与远程库进行关联</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote add origin git@github.com:YourName&#x2F;YourGit.git</span><br></pre></td></tr></table></figure>
<p>添加好远程库后，远程库的默认名字是<code>origin</code>，也可以改成别的</p>
<p><strong>查看远程库信息</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin  git@github.com:michaelliao&#x2F;learngit.git (fetch)</span><br><span class="line">origin  git@github.com:michaelliao&#x2F;learngit.git (push)</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-v：显示详细信息</span><br></pre></td></tr></table></figure>

<p><strong>推送分支</strong><br>就是把该分支上所有的本地提交推送到远程库，推送时候要指定本地分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">git push [-u] 远程库 本地分支</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-u：将本地master分支与远程master分支关联起来，一般在第一次使用</span><br><span class="line"></span><br><span class="line">$ git push -u origin master</span><br><span class="line">Counting objects: 20, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (15&#x2F;15), done.</span><br><span class="line">Writing objects: 100% (20&#x2F;20), 1.64 KiB | 560.00 KiB&#x2F;s, done.</span><br><span class="line">Total 20 (delta 5), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (5&#x2F;5), done.</span><br><span class="line">To github.com:michaelliao&#x2F;learngit.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br><span class="line">Branch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;origin&#39;.</span><br></pre></td></tr></table></figure>
<p>有时候我们会遇到别人也对同样的文件做了修改，就会导致推送失败，解决办法呢就时先用<code>git pull</code>将最新提交抓取下来，然后再本地合并解决冲突再推送</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git push origin dev</span><br><span class="line">To github.com:michaelliao&#x2F;learngit.git</span><br><span class="line"> ! [rejected]        dev -&gt; dev (non-fast-forward)</span><br><span class="line">error: failed to push some refs to &#39;git@github.com:michaelliao&#x2F;learngit.git&#39;</span><br><span class="line">hint: Updates were rejected because the tip of your current branch is behind</span><br><span class="line">hint: its remote counterpart. Integrate the remote changes (e.g.</span><br><span class="line">hint: &#39;git pull ...&#39;) before pushing again.</span><br><span class="line">hint: See the &#39;Note about fast-forwards&#39; in &#39;git push --help&#39; for details.</span><br><span class="line"></span><br><span class="line">$ git pull</span><br><span class="line">There is no tracking information for the current branch.</span><br><span class="line">Please specify which branch you want to merge with.</span><br><span class="line">See git-pull(1) for details.</span><br><span class="line"></span><br><span class="line">    git pull &lt;remote&gt; &lt;branch&gt;</span><br><span class="line"></span><br><span class="line">If you wish to set tracking information for this branch you can do so with:</span><br><span class="line"></span><br><span class="line">    git branch --set-upstream-to&#x3D;origin&#x2F;&lt;branch&gt; dev</span><br><span class="line"></span><br><span class="line">#失败了，原来时没有指定本地dev分支与远程origin&#x2F;dev分支关联，那关联一下</span><br><span class="line">$ git branch --set-upstream-to&#x3D;origin&#x2F;dev dev</span><br><span class="line">Branch &#39;dev&#39; set up to track remote branch &#39;dev&#39; from &#39;origin&#39;.</span><br><span class="line">#如果我们在创建dev分支时，使用git switch -b dev origin&#x2F;dev（从创建与远程dev分支对应的dev分支）则不再需要关联</span><br><span class="line"></span><br><span class="line">$ git pull</span><br><span class="line">Auto-merging env.txt</span><br><span class="line">CONFLICT (add&#x2F;add): Merge conflict in env.txt</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></table></figure>

<p>当我们多次抓取、合并、推送后，我们的分支就变成这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git log --graph --pretty&#x3D;oneline --abbrev-commit</span><br><span class="line">* d1be385 (HEAD -&gt; master, origin&#x2F;master) init hello</span><br><span class="line">*   e5e69f1 Merge branch &#39;dev&#39;</span><br><span class="line">|\  </span><br><span class="line">| *   57c53ab (origin&#x2F;dev, dev) fix env conflict</span><br><span class="line">| |\  </span><br><span class="line">| | * 7a5e5dd add env</span><br><span class="line">| * | 7bd91f1 add new env</span><br><span class="line">| |&#x2F;  </span><br><span class="line">* |   12a631b merged bug fix 101</span><br><span class="line">|\ \  </span><br><span class="line">| * | 4c805e2 fix bug 101</span><br><span class="line">|&#x2F; &#x2F;  </span><br><span class="line">* |   e1e9c68 merge with no-ff</span><br><span class="line">|\ \  </span><br><span class="line">| |&#x2F;  </span><br><span class="line">| * f52c633 add merge</span><br><span class="line">|&#x2F;  </span><br><span class="line">*   cf810e4 conflict fixed</span><br></pre></td></tr></table></figure>
<p>这时我们可以使用<code>git rebase</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git rebase</span><br><span class="line">First, rewinding head to replay your work on top of it...</span><br><span class="line">Applying: add comment</span><br><span class="line">Using index info to reconstruct a base tree...</span><br><span class="line">M	hello.py</span><br><span class="line">Falling back to patching base and 3-way merge...</span><br><span class="line">Auto-merging hello.py</span><br><span class="line">Applying: add author</span><br><span class="line">Using index info to reconstruct a base tree...</span><br><span class="line">M	hello.py</span><br><span class="line">Falling back to patching base and 3-way merge...</span><br><span class="line">Auto-merging hello.py</span><br><span class="line"></span><br><span class="line">$ git log --graph --pretty&#x3D;oneline --abbrev-commit</span><br><span class="line">* 7e61ed4 (HEAD -&gt; master) add author</span><br><span class="line">* 3611cfe add comment</span><br><span class="line">* f005ed4 (origin&#x2F;master) set exit&#x3D;1</span><br><span class="line">* d1be385 init hello</span><br></pre></td></tr></table></figure>
<p>提交记录变成一条直线。原来这个命令就是将我们本地提交更改位置进行整理，缺点是本地分叉提交已经被修改过了</p>
<p><strong>抓取分支</strong><br>确保本地库与远程库已关联完成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git clone git@github.com:YourName&#x2F;YourGit.git</span><br><span class="line">Cloning into &#39;YourGit&#39;...</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 3</span><br><span class="line">Receiving objects: 100% (3&#x2F;3), done.</span><br></pre></td></tr></table></figure>
<p>也许你发现，远程库的地址不止一个。事实上，Git支持多种协议，默认的<code>git://</code>使用SSH，也可以使用HTTPS等协议</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol>
<li><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">Git教程 - 廖雪峰的官方网站</a></li>
</ol>
<br/>

<hr>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Beluga：相关格式&amp;标准</title>
    <url>/QT000001/</url>
    <content><![CDATA[<p><em>#QT000001</em><br>博客相关标准&amp;格式</p>
<a id="more"></a>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<p>Version：2.4</p>
<h1 id="博客目录"><a href="#博客目录" class="headerlink" title="博客目录"></a>博客目录</h1><p>-随笔<br>-教程<br>-笔记<br>&emsp;&emsp;-学习<br>&emsp;&emsp;-项目<br>-其他</p>
<h1 id="文章格式"><a href="#文章格式" class="headerlink" title="文章格式"></a>文章格式</h1><p>为了博客便于读者阅读查询，也使显示风格与内容格式能够更加统一，为此特有着如下相关标准与格式</p>
<h2 id="隔行与否"><a href="#隔行与否" class="headerlink" title="隔行与否"></a>隔行与否</h2><p><strong>需要隔行</strong></p>
<ol>
<li>标题（加粗）与标题（加粗）之间</li>
<li>序号结束后</li>
</ol>
<p><strong>无需隔行</strong></p>
<ol>
<li>标题（加粗）与内容之间</li>
<li>序号开始前</li>
<li>序号与序号之间</li>
</ol>
<p><strong>视位置而定</strong></p>
<ol>
<li>代码符[```]前</li>
<li>图片前</li>
<li>注释前</li>
</ol>
<h2 id="符号使用"><a href="#符号使用" class="headerlink" title="符号使用"></a>符号使用</h2><ol>
<li>概要结尾使用句号[。]，其余结尾不加符号（冒号[：]、叹号[！]除外）</li>
</ol>
<h2 id="注释使用"><a href="#注释使用" class="headerlink" title="注释使用"></a>注释使用</h2><p>若是在正常模式下应加引用符[&gt;]，代码模式下则不加</p>
<p><strong>单行注释</strong><br>注：xxx</p>
<p><strong>多行注释</strong><br>注：<br>&emsp;&emsp;1.&ensp;xxx<br>&emsp;&emsp;2.&ensp;xxx</p>
<h2 id="序号分隔"><a href="#序号分隔" class="headerlink" title="序号分隔"></a>序号分隔</h2><p>1.&ensp;…<br>&emsp;&emsp;1)&ensp;…<br>&emsp;&emsp;2)&ensp;…<br>2.&ensp;…</p>
<h2 id="小代码"><a href="#小代码" class="headerlink" title="小代码"></a>小代码</h2><p>文件名（完整文件名、后缀名、设备文件名）、目录、显示内容、修改内容、按键</p>
<p><strong>按键</strong><br>正文模式：<code>[Ctrl]</code>+<code>[C]</code><br>代码模式：[Ctrl]+[C]</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;样式一</span><br><span class="line">命令：</span><br><span class="line">chown [-R] 账号 文件名</span><br><span class="line">chown [-R] 账号:用户组 文件名</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-R:进行递归的持续更改，即连同子目录下的所有文件、目录都更新成这个用户组</span><br><span class="line"></span><br><span class="line">#更改文件所有者</span><br><span class="line">$ chown bin test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rw-r--r--  1 bin    users     5 3月  10 15:18 test.txt</span><br><span class="line"></span><br><span class="line">#更改文件所有者和用户组</span><br><span class="line">$ chown root:root test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rw-r--r--  1 root   root      5 3月  10 15:18 test.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;样式二</span><br><span class="line">头文件：</span><br><span class="line">#include &lt;sys&#x2F;types.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;stat.h&gt;</span><br><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line"></span><br><span class="line">函数体：</span><br><span class="line">int open(const char *pathname, int flags);</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">pathname：	文件的路径名</span><br><span class="line">flags：		打开文件的权限</span><br><span class="line">O_RDONLY, O_WRONLY, or O_RDWR</span><br><span class="line">只读	  只写      可读可写</span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">成功：新的文件描述符 &gt;&#x3D;0</span><br><span class="line">失败：-1</span><br></pre></td></tr></table></figure>

<h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><h2 id="主站更新日志（关于）"><a href="#主站更新日志（关于）" class="headerlink" title="主站更新日志（关于）"></a>主站更新日志（关于）</h2><ul>
<li>文章:<br>&emsp;&emsp;上架/下架/编辑<br>&emsp;&emsp;&emsp;&emsp;上架/下架文章#AB000001【…】<br>&emsp;&emsp;&emsp;&emsp;编辑文章【…】</li>
<li>内容：<br>&emsp;&emsp;更新/修改/完善</li>
<li>问题：<br>&emsp;&emsp;修复/优化…问题</li>
<li>页面/组件：<br>&emsp;&emsp;新增/移去/调整</li>
<li>功能：<br>&emsp;&emsp;增加/删除/开启/关闭</li>
</ul>
<h2 id="文章编辑日志（文章）"><a href="#文章编辑日志（文章）" class="headerlink" title="文章编辑日志（文章）"></a>文章编辑日志（文章）</h2><ul>
<li>更名：<br>&emsp;&emsp;修改文章名称为【…】</li>
<li>内容：<br>&emsp;&emsp;完善/修改<br>&emsp;&emsp;&emsp;&emsp;完善文章前言部分/后续章节/摘要部分<br>&emsp;&emsp;&emsp;&emsp;修改文章符号/用词</li>
<li>样式/排版<br>&emsp;&emsp;更改/调整<br>&emsp;&emsp;&emsp;&emsp;更改文章引用样式/代码样式/编码位置<br>&emsp;&emsp;&emsp;&emsp;调整文章排版</li>
<li>问题：<br>&emsp;&emsp;修复/优化文章…问题</li>
</ul>
<blockquote>
<p>QT系列无编辑日志</p>
</blockquote>
<br/>

<hr>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>KeePass：密码管理器使用配置指南</title>
    <url>/JC190910/</url>
    <content><![CDATA[<p><em>#JC190910</em><br>在生活中有太多需要我们记住的密码，电脑开机密码、上网帐号密码、手机服务密码、邮箱登陆密码、银行交易密码等等。大多数人常常采取不同平台使用同一密码的策略，但往往不同平台的密码规则不尽相同，有的必须含有符号，有的又不允许出现符号。更重要的是，这样当某个平台的密码遭到泄露时其他平台可能因此被有心人通过撞库攻破，因此这并不是个多么高明的办法。而如何解决这件令人头大的事情呢，也许像KeePass这类密码管理软件可以帮得上忙。</p>
<a id="more"></a>
<p>KeePass我用了挺久，这篇文章也很早就想写。但是在我用KeePass的时候，大问题没有但有个小问题一直困扰我，直到最近才算比较好地解决了。相信这个问题应该不止我一个人遇到，但是网上没有相关的解决方法，有几篇大概写了相关的东西我试了试但是事实上我在几台电脑上试过并不管用，所以这应该是目前你在网上能找到的唯一一篇解决这个问题的文章<em>（你问这个问题到底是啥，不告诉你，继续看就知道了）</em></p>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol>
<li>KeePass<br><a href="https://keepass.info/" target="_blank" rel="noopener">软件官网</a><br><a href="https://keepass.info/download.html" target="_blank" rel="noopener">下载地址</a></li>
<li>Keepass2Android (for Android)<br><a href="https://play.google.com/store/apps/details?id=keepass2android.keepass2android" target="_blank" rel="noopener">下载地址</a>（404!）</li>
<li>KeePass语言包<br><a href="https://keepass.info/translations.html" target="_blank" rel="noopener">下载地址</a></li>
<li>KeePass插件包<br><a href="https://keepass.info/plugins.html" target="_blank" rel="noopener">下载地址</a></li>
</ol>
<blockquote>
<p><em>注：请不要使用非官方推荐软件/插件，包括但不限于精简版、绿色版、增强版等。官方提供简体中文</em></p>
</blockquote>
<h1 id="KeePass是什么"><a href="#KeePass是什么" class="headerlink" title="KeePass是什么"></a>KeePass是什么</h1><p>KeePass是一个开源密码管理器，可以帮助您以安全的方式管理密码。您可以将所有密码放在一个数据库中，该数据库使用一个主密钥或密钥文件锁定。因此，您只需记住一个主密码或选择密钥文件即可解锁整个数据库。其使用当前已知的最佳和最安全的加密算法（AES和Twofish）对数据库进行加密</p>
<h1 id="KeePass与同类软件"><a href="#KeePass与同类软件" class="headerlink" title="KeePass与同类软件"></a>KeePass与同类软件</h1><p>同类软件主要指：1Password、LastPass、EnPass、Keeper等</p>
<p><strong>优点</strong></p>
<ol>
<li>开源<br> KeePass是一款开源密码管理器，被OSI认证。你可以完全访问其源代码编译它，检查其安全性，如果需要你甚至可以修改内置加密算法改用其他</li>
<li>免费<br> 你可能听说过1Password或LastPass，它们也同为密码管理软件。1Password的知名度和用户量都是绝对领先的，其订阅费用为3美元/月。LastPass虽说有免费版，但部分功能会受到一定阉割，例如倘若你想要完成在电脑端与移动端间同步则需要升级成付费版，费用也要2美元/月。就目前而言，市面上比较主流的密码管理软件订阅价格都不算低，基本都要2-3美元/月，反观KeePass则是一款开源免费软件</li>
<li>安全<br> 多数的密码管理软件为了使得多平台开发方便通常会将数据库储存在自家云端，KeePass则只能保存在本地，对于密码这类敏感数据可能放自己手上会比较让人安心。KeePass支持高级加密标准（AES，Rijndael）和Twofish算法，获得德国联邦信息安全局推荐，法国网络和信息安全局颁发Niveau证书，可以说KeePass就是现在最安全的密码管理软件</li>
<li>shuai！ <img src="/JC190910/demo_1.gif" class="">
 <center>KeePass双通道自动输入混淆</center>

</li>
</ol>
<p><strong>缺点</strong></p>
<ol>
<li>上手难度高<br>KeePass虽然功能十分强大，但带来的问题就是使用起来有些复杂可设置选项非常多。让刚接触的同学一脸懵逼，而官方帮助文档都是全英文，上手难度较高</li>
<li>界面有些丑，不过问题不大</li>
</ol>
<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><h2 id="软件包下载"><a href="#软件包下载" class="headerlink" title="软件包下载"></a>软件包下载</h2><p>打开KeePass下载地址下载，这里我推荐下载便携式压缩包，下好只需解压即可。好处是软件各种配置文件都保存在程序目录下，便于后期移植</p>
<h2 id="语言包安装"><a href="#语言包安装" class="headerlink" title="语言包安装"></a>语言包安装</h2><p>软件安装完成后默认英文，修改需添加语言包</p>
<ol>
<li>软件主界面点击【View】选择【Change Language…】，弹出【Select Language】框</li>
<li>【Get More】打开语言包下载页，选择相应语言包下载</li>
<li>【Open Folder】打开语言包安装目录，将下载好的语言包解压（.lngx）到该文件夹中 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语言包安装目录：（示例）</span><br><span class="line">D:\KeePass-2.43\Languages</span><br></pre></td></tr></table></figure></li>
<li>在【Select Language】框选中语言，重启KeePass生效</li>
</ol>
<h2 id="插件包安装"><a href="#插件包安装" class="headerlink" title="插件包安装"></a>插件包安装</h2><p>KeePass是一个开源软件，拥有大量优秀的开源插件支持</p>
<ol>
<li>软件主界面点击【工具】选择【插件管理器】，弹出【插件】框</li>
<li>【获取更多插件】打开插件包下载页，选择对应插件包下载</li>
<li>【打开文件夹】打开插件安装目录，将下载好的插件包解压（.plgx）到该文件夹中 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">插件包安装目录：（示例）</span><br><span class="line">D:\KeePass-2.43\Plugins</span><br></pre></td></tr></table></figure></li>
<li>重启KeePass生效</li>
</ol>
<h1 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h1><h2 id="数据库创建"><a href="#数据库创建" class="headerlink" title="数据库创建"></a>数据库创建</h2><ol>
<li><p>软件主界面点击【文件】选择【新建】，弹出新建数据库点击【OK】</p>
</li>
<li><p>选择该数据库（.kdbx）保存的位置（这个位置一定要记住！数据库里面存着你保存的所有数据）</p>
</li>
<li><p>设置数据库口令<br> 勾选【显示高级选项】，KeePass提供了3种可组合加密方式<br> <strong>管理密码</strong>：这个很常见，就是设置一个管理密码来加密</p>
<p> <strong>密钥文件/提供器</strong>：这个是设定一个任意类型的文件（图片、视频、文档等）来加密，具体的工作原理是对设定的文件求其哈希值来作为密钥，所以这就要求该文件不能被修改<br> <em>（什么！你说换个文件可不可以？你说呢！换个文件都可以还加个鬼的密！哦对，对密钥文件进行重命名操作倒是没有影响）</em></p>
<blockquote>
<p>注：使用过大的密钥文件会严重影响数据库解锁速度</p>
</blockquote>
<p> <strong>Windows用户账户</strong>：这个选项则是把该数据库与该Windows账户绑定，安全性无疑很高。但是倘若你的Windows账户出现问题（被删除、使用命令行重置系统密码等），那可能也打不开该数据库</p>
 <img src="/JC190910/create.png" class="">
</li>
<li><p>设置完数据库口令进入软件主界面，还可以继续配置数据库安全<br> 点击【文件】选择【数据库设置】，弹出【数据库配置】框选择【安全】<br> <strong>迭代次数</strong>：次数越高数据库越难被暴力破解，但每次打开数据库耗时也越长。默认值为60000，可以适当调高</p>
</li>
</ol>
<h2 id="自动输入配置"><a href="#自动输入配置" class="headerlink" title="自动输入配置"></a>自动输入配置</h2><p>KeePass支持两种不同自动输入模式：普通自动输入、双通道自动输入混淆</p>
<blockquote>
<p>注：如果目标应用程序使用管理员权限运行，对应KeePass也必须使用管理员权限运行才能在此应用程序中使用自动输入</p>
</blockquote>
<p><strong>普通自动输入</strong>：自动输入顾名思义就是用软件模拟按键以代替手动输入，而普通自动输入就是将待输入字符逐个按顺序输入</p>
<p><strong>双通道自动输入混淆</strong>：听名字就觉得很厉害，效果如上图所示。工作原理是将待输入字符分为两部分，然后使用模拟按键和复制粘贴两种方式混合输入，输入完成后再还原输入前的剪切板内容。这样的做的好处就是单一的键盘记录软件或剪切板监听软件都无法窃取到输入的完整字段<em>（其实最重要的是什么，逼格！）</em><br>由于有些应用程序/网页不支持移动光标/粘贴操作，此功能默认不启用。必须在添加编辑记录时点击【自动输入】，勾选【双通道自动输入混淆】，这样逐条设置对于有上百条密码的用户来说无疑是一场灾难，这个我们可以通过建预设模板来解决。</p>
<img src="/JC190910/AutoInput_1.png" class="">

<h3 id="匹配规则配置"><a href="#匹配规则配置" class="headerlink" title="匹配规则配置"></a>匹配规则配置</h3><p>自动输入时，KeePass会根据当前活动窗口标题在数据库中搜索相匹配的记录，如果一条记录的标题或网址包含在活动窗口标题内那么这条记录将被匹配。举个例子：你现在使用Chrome浏览器上B站，准备使用KeePass自动输入账号密码。你按下自动输入热键，KeePass会读取活动窗口标题【哔哩哔哩弹幕视频网 - ( ゜- ゜)つロ 乾杯~ - bilibili - Google Chrome】，在数据库中搜索哪条记录与之匹配，如果数据中刚好有匹配记录则执行自动输入。<em>（是不是听起来感觉很聪明的亚子？）</em>然而事实上并不是这样，问题出就出在KeePass是对活动窗口标题匹配。倘若数据库中只有B站的记录那的确可以实现上述操作，但是当你实际用的时候你会发现数据库中除了有B站的记录还有Google的记录，没错，后面那个Google Chrome也会被匹配到，这个时候KeePass直接就傻了不知道该输入哪个记录。不过还好当出现一窗口匹配多个记录时会自动弹出【选取自动输入记录】框让你选择</p>
<p><strong>具体设置</strong></p>
<ol>
<li><p>网上很多文章会推荐你设置每次自动输入之前都弹出【选取自动输入记录】框来选择以防误输<br> 软件主界面点击【工具】选择【选项】，弹出【选项】框选择【高级】，勾选【总是显示全局自动输入记录选取对话框】</p>
 <img src="/JC190910/AutoInput_2.png" class="">
</li>
<li><p>而我则不喜欢这么设，既然叫自动输入还要选多一步那可太不聪明了<br> 我们从源头入手，KeePass之所以会匹配错是因为浏览器的Google Chrome后缀，那我们就把Google的记录给删了不就完了！<em>（我可真是太聪明了）*开个玩笑，不过实际上也差不多，我们可以把Google记录给改下名或者设成过期，这样也就不会被匹配到，但是麻烦就是在登录Google网页时用不了自动输入，算是牺牲一条成就千万条<br> *（Google在这里只是举个例子，其他后缀也是同样思路）</em></p>
</li>
</ol>
<blockquote>
<p>还有个办法就是把浏览器的后缀给改/删了，据说可行不过具体的我没有深入研究，有兴趣的同学可以试试</p>
</blockquote>
<h3 id="键入规则配置"><a href="#键入规则配置" class="headerlink" title="键入规则配置"></a>键入规则配置</h3><p>匹配规则是告诉KeePass怎么去匹配数据库中的记录，键入规则则是告诉KeePass怎么去输入你的记录。概要里提到的问题主要就是出现在这里。你总不想当你周围有人看着你，正准备秀一手的时候突然像下图一样吧，尴尬且不说，关键是你的密码可都是明文显示在屏幕上</p>
<img src="/JC190910/demo_2.gif" class="">

<p>网上关于键入规则的资料，只要你用的是Windows10，那就通通会有或多或少问题<em>（现在这个时候Windows10应该是绝对主流了吧，Windows7可能也会有一样问题不过我也没有去试）</em>，这个你只有看我这篇文章才能实现真正的一步到位</p>
<p><strong>具体设置</strong></p>
<ol>
<li><p>软件主界面左侧右键数据库最顶层选择【编辑群组】，弹出【编辑群组】框选择【自动输入】，选中【替代默认规则为】，这样我们可以在下面填入我们自己的键入规则，这里先解释下默认键入规则</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">默认键入规则：</span><br><span class="line">&#123;USERNAME&#125;&#123;TAB&#125;&#123;PASSWORD&#125;&#123;ENTER&#125;</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">&#123;USERNAME&#125;：键入用户名</span><br><span class="line">&#123;TAB&#125;：按[Tab]键（切换到密码输入行）</span><br><span class="line">&#123;PASSWORD&#125;：键入密码</span><br><span class="line">&#123;ENTER&#125;：按[Enter]键</span><br></pre></td></tr></table></figure>
<p> 如果我们直接使用默认规则会是什么样的呢</p>
 <img src="/JC190910/demo_3.gif" class="">

<p> 默认键入规则明显不适合有中文输入法的用户，那我们可以改进一下</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">改进键入规则1：</span><br><span class="line">+&#123;DELAY 100&#125;&#123;CLEARFIELD&#125;&#123;USERNAME&#125;&#123;TAB&#125;&#123;PASSWORD&#125;&#123;ENTER&#125;</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">+：按[Shift]键（为了将中文输入切换成英文输入）</span><br><span class="line">&#123;DELAY 100&#125;：延时100ms</span><br><span class="line">&#123;CLEARFIELD&#125;：清空输入框</span><br></pre></td></tr></table></figure>
<p> <em>（我们试一下，欸这样设好像可以！我们再来一遍，啊怎么又不行了？）</em><br> 原因呢就是因为第一遍键入的时候，输入法是中文，执行一遍自动输入之后，输入法就变成了英文。英文再去执行自动输入一经过<code>[Shift]</code>键又变成了中文。反正就是你要确保你执行自动输入时输入法是中文的，这样一说好像改了和没改根本没差，我默认键入规则确保执行是英文的不就好了<em>（ ￣ ￣||| 好像的确是这个理）<em>。这个时候可能有些比较仔细的人会想到一个办法：那我在规则里面加上两个<code>[Shift]</code>键不就好了，输入前一个输入后一个。</em>（好像可以欸，我怎么早没有想到）</em></p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">改进键入规则2：</span><br><span class="line">+&#123;DELAY 100&#125;&#123;CLEARFIELD&#125;&#123;USERNAME&#125;&#123;TAB&#125;&#123;PASSWORD&#125;+&#123;DELAY 100&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：<code>[Shift]</code>键后一定要加延时，不然会失效</p>
</blockquote>
<p> 但是真的可以吗？当然不是，如果一开始输入法是英文就又回到原点，换句话说就是你根本不能保证你每次需要自动输入的时候输入法到底是处在英文还是中文。那还有什么办法吗？前面虽然改来改去还是不行但是它却给了我们一个思路：我们可以通过按某个键来切换输入法中英文。我们顺着这个思路，那有没有什么办法是可以通过按某个键来设定输入法成英文呢？等等，这不就是热键绑定吗！不过微软输入法好像并不支持绑定热键来把输入法设成英文<br> <em>（欸这是什么？）</em></p>
 <img src="/JC190910/AutoInput_3.png" class="">
<p> 这个是设置Windows切换语言热键，欸那我们可以加一个美式键盘再绑定上热键不就可以用热键来回切了</p>
 <img src="/JC190910/AutoInput_4.png" class="">
<p> 然而世界就是这么奇妙，就在你以为一切都要大功告成的时候。我的电脑一重启，发现刚刚绑定的美式键盘热键恢复成默认没有绑定。起初我以为是自己没有保存好，又试了几次还换了不同的按键都不行。在这里捣鼓了好几天重做了几遍系统才终于认命这是Windows的Bug（Windows10 1903 的 09 累计更新 KB4517211 这个问题还是没有修复）。后面我想要不下个搜狗输入法看看能不能设置，下好之后突然发现搜狗输入法也可以绑定热键，把搜狗输入法设成默认英文输入，绑定好热键重启电脑，没有恢复默认！调好键入规则，试一下居然可以，当你需要自动输入时，自动切换成搜狗输入法输入，输入完成后切换回微软输入法<br> 然而我还高估Windows了，我隔天再用的时候发现可以切过去搜狗输入法但是又切不回微软输入法，赶紧检查一下热键却发现热键都是设好的没有问题。动了一下开机默认输入法之后（没有更改还是默认），发现问题解决，但是重启又不行<em>（Windows10真不愧被称为Bug10,巨硬真是修了一个Bug又留下两个Bug）</em><br> 经过我的各种尝试，我捣鼓出了现阶段的终极解决方法：微软输入法的切换热键设成【左Alt+Shift+0】（前面的键不能改，后面的数字可以随便改），搜狗输入法的切换热键设成【Ctrl+0】（这个应该可以随便设，问题不大），然后配合KeePass的键入规则</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">终极键入规则：</span><br><span class="line">^0&#123;CLEARFIELD&#125;&#123;USERNAME&#125;&#123;TAB&#125;&#123;PASSWORD&#125;%+0</span><br><span class="line"></span><br><span class="line">解释：</span><br><span class="line">^0：按[Ctrl]+[0]</span><br><span class="line">%+0：按[Alt]+[Shift]+[0]</span><br></pre></td></tr></table></figure>
<p> 还有这里没有使用<code>{ENTER}</code>结尾，因为现在大多数网站输入完账号密码之后大都还有验证码。直到这里才可以真正实现一键输入账号密码，不用再担心输入法到底是中文还是英文</p>
</li>
</ol>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol>
<li><a href="https://post.smzdm.com/p/713042/" target="_blank" rel="noopener">从入门到熟练：KeePass全网最详使用指南 - 值不值得买</a></li>
<li><a href="https://blog.csdn.net/SingWarm/article/details/90669580" target="_blank" rel="noopener">KeePass教程之二：完美的通用自动输入规则 - CSDN</a></li>
</ol>
<br/>

<hr>
<h1 id="编辑日志"><a href="#编辑日志" class="headerlink" title="编辑日志"></a>编辑日志</h1><p><strong>20/01/21</strong><br>1.&ensp;修改文章名称为【KeePass：密码管理器使用配置指南】<br>2.&ensp;更改文章编码位置</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>KeePass</tag>
        <tag>1Password</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Cortex-A53的语音识别系统</title>
    <url>/BJ190619/</url>
    <content><![CDATA[<p><em>#BJ190619</em><br>这个项目是我在参加物联网应用工程师考核时所做的项目。项目的技术重点虽然在于语音识别功能的实现，但这其中还包括关于Linux环境搭建、开发平台与PC的文件传输、BMP刷图、触摸屏操作判断等其他的相关知识。简而言之，这是一个较为完整的嵌入式开发项目，基本的嵌入式开发步骤都能在这找到，希望这个笔记能对你有所帮助。<br>也由于我是边完成项目边整理笔记的缘故，这篇文章的更新时间跨度也变得有些长，理解万岁！_(:з」∠)_</p>
<a id="more"></a>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<h1 id="硬件环境"><a href="#硬件环境" class="headerlink" title="硬件环境"></a>硬件环境</h1><h2 id="开发平台-GEC6818"><a href="#开发平台-GEC6818" class="headerlink" title="开发平台 GEC6818"></a>开发平台 GEC6818</h2><p>这个项目使用的是GEC6818开发平台，该平台搭载三星Cortex-A53系列八核处理器S5P6818，最高主频可以达到1.4GHz，可以用于嵌入式Linux和Android等操作系统的驱动、应用开发。开发板支持千兆以太网、板载LVDS接口、MIPI接口、USB接口等</p>
<h2 id="处理芯片-S5P6818"><a href="#处理芯片-S5P6818" class="headerlink" title="处理芯片 S5P6818"></a>处理芯片 S5P6818</h2><p>S5P6818是三星的64位八核Cortex-A53架构处理器，它和S5P4418芯片管脚完全兼容，唯一不同的就是ARM内核不一样。二者芯片差异如下</p>
<img src="/BJ190619/S5P6818&S5P4418.jpg" class="">

<h1 id="操作系统烧写"><a href="#操作系统烧写" class="headerlink" title="操作系统烧写"></a>操作系统烧写</h1><p>这个板子现在是已经烧好Linux系统，一个操作系统主要包括引导程序（uboot）烧写、内核（kernel）烧写以及文件系统（file_system）烧写<br>（这次主要偏向于Linux系统应用，操作系统部分就先挖个坑好了_(:з」∠)_</p>
<h1 id="Linux环境搭建"><a href="#Linux环境搭建" class="headerlink" title="Linux环境搭建"></a>Linux环境搭建</h1><h2 id="开机过程"><a href="#开机过程" class="headerlink" title="开机过程"></a>开机过程</h2><p>&emsp;&emsp;&emsp;&emsp;&emsp;&ensp;加载&emsp;&emsp;&emsp;&emsp;&emsp;挂载<br>&emsp;&emsp;uboot&emsp;—&gt;&emsp;kernel&emsp;—&gt;&emsp;file_system<br>&emsp;&ensp;引导程序&emsp;&emsp;&emsp;&emsp;内核&emsp;&emsp;&emsp;&emsp;文件系统</p>
<h3 id="加载引导"><a href="#加载引导" class="headerlink" title="加载引导"></a>加载引导</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter into Normal mode</span><br><span class="line">Hit any key to stop autoboot:  3	#倒数3秒内，只要按下回车键，就会进入uboot引导程序</span><br><span class="line">					#倒数3秒内，不按下回车键，就会加载内核</span><br></pre></td></tr></table></figure>

<h3 id="加载内核"><a href="#加载内核" class="headerlink" title="加载内核"></a>加载内核</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Boot with zImage	（内核的镜像文件）</span><br><span class="line"></span><br><span class="line">Starting kernel ...</span><br><span class="line"></span><br><span class="line">Uncompressing Linux... done, booting the kernel.		#开始加载内核</span><br><span class="line">   ...</span><br><span class="line">&#x2F;&#x2F;内核的工作:初始化硬件接口</span><br><span class="line">[    2.132032] USB Serial support registered for iuu_phoenix	#串口模块</span><br><span class="line">[    2.930616] Bluetooth: HCI UART driver ver 2.2		#蓝牙模块</span><br><span class="line">[    3.162201] TCP cubic registered</span><br><span class="line">[    3.165367] NET: Registered protocol family 10		#网口硬件设备</span><br><span class="line">[    3.171439] lo: Disabled Privacy Extensions</span><br><span class="line">[    3.179299] Mobile IPv6</span><br><span class="line">[    3.179328] IPv6 over IPv4 tunneling driver</span><br><span class="line">   ...</span><br><span class="line">[   21.717123] GEC210 audio driver Playback mapping OK</span><br><span class="line">[   21.717736] GEC210 audio driver Capture mapping OK		#内核加载完成</span><br></pre></td></tr></table></figure>

<h3 id="挂载文件系统"><a href="#挂载文件系统" class="headerlink" title="挂载文件系统"></a>挂载文件系统</h3><p><code>uboot/kernel/file_system</code>储存在nandflash中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@GEC210 &#x2F;]#	#开发板中文件系统的命令行</span><br></pre></td></tr></table></figure>

<h2 id="连接PC"><a href="#连接PC" class="headerlink" title="连接PC"></a>连接PC</h2><ol>
<li>正确连接板子的电源线、串口线及USB转串口线<br> USB接PC<br> 公口接开发板自带的串口线的一端母口，另一端母口接开发板串口的公口</li>
<li>安装USB转串口驱动<br> 1) 安装PL2303驱动<br> <code>\tool\PL2303_Prolific_DriverInstaller_v1210.exe</code><br> 2) 安装Hl-340驱动<br> <code>\tool\Hl-340.exe</code><br> 3) PC查看串口号<br> <code>计算机</code> — <code>管理</code> — <code>设备管理器</code> — <code>端口（COM和LPT）</code> — <code>查看到具体的串口号（如COM3）</code></li>
<li>打开串口终端(SecureCRT)<br> 端口选前面查到的串口号，其他的按图中配置 <img src="/BJ190619/SecureCRTLink.jpg" class="">
 给开发板上电，在终端上显示开发板的启动信息 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[    4.123000] EXT4-fs (mmcblk0p2): re-mounted. Opts: data&#x3D;ordered</span><br><span class="line">[    4.455000] eth0: device MAC address 96:12:7e:f0:02:8e</span><br><span class="line">[    4.462000] stmmac_open: failed PTP initialisation</span><br><span class="line">[    4.473000] gecBt    initialized</span><br><span class="line">[    4.680000] usbcore: registered new interface driver rtl8723bu</span><br><span class="line">#开发板成功启动并进入系统，界面上会显示应用程序的界面</span><br></pre></td></tr></table></figure>
 但是，串口终端不能输入，按<code>[Ctrl]</code>+<code>[C]</code>，进入到命令行操作界面 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@GEC6818 &#x2F;IOT]#		#默认路径为&#x2F;IOT</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://tsuicyne.github.io/BJ190619/#修改默认路径">修改默认路径</a></p>
</blockquote>
</li>
</ol>
<h2 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h2><h3 id="串口传输文件"><a href="#串口传输文件" class="headerlink" title="串口传输文件"></a>串口传输文件</h3><p><strong>速度慢，但比较方便，无需其他工具，适用于传输小文件</strong><br>通过rx命令来进行传输</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">rx 文件</span><br><span class="line"></span><br><span class="line">$ .&#x2F;aaa		#aaa是保存文件名，不一定是原文件名</span><br><span class="line">CCC</span><br><span class="line">等用户去添加要上传的文件</span><br><span class="line">选择&quot;传输&quot; --- 发送x modem --- 在弹出的对话框中，选择要上传的文件 --- 确定</span><br><span class="line">开始 xmodem 传输</span><br><span class="line">100%       7 KB    7 KB&#x2F;s 00:00:01       0 Errors</span><br></pre></td></tr></table></figure>

<h3 id="网线传输文件"><a href="#网线传输文件" class="headerlink" title="网线传输文件"></a>网线传输文件</h3><p><strong>适用于传输中型大小的文件</strong></p>
<blockquote>
<p>设置IP时要确保开发板IP与PC-IP处于同一网段<br>Windows下还需关闭该网络防火墙<br>本次测试IP：<br>PC-IP：<code>172.16.17.200</code><br>GEC6818-IP：<code>172.16.17.201</code></p>
</blockquote>
<ol>
<li><p>查看开发板IP</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ifconfig</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr FE:12:5E:C8:00:77  </span><br><span class="line">	  inet6 addr: fe80::fc12:5eff:fec8:77&#x2F;64 Scope:Link</span><br><span class="line">	  UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">	  RX packets:28 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">	  TX packets:5 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">	  collisions:0 txqueuelen:1000 </span><br><span class="line">	  RX bytes:2472 (2.4 KiB)  TX bytes:378 (378.0 B)</span><br><span class="line">	  Interrupt:80 </span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">	  inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">	  inet6 addr: ::1&#x2F;128 Scope:Host</span><br><span class="line">	  UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">	  RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">	  TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">	  collisions:0 txqueuelen:0 </span><br><span class="line">	  RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</span><br></pre></td></tr></table></figure></li>
<li><p>设置开发板IP<br> 1.1) 临时配置IP（仅本次开机有效，重启后恢复）</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ifconfig eth0 172.16.17.201		#给开发板设置一个IP</span><br><span class="line">$ ifconfig eth0 up			#开启网卡</span><br></pre></td></tr></table></figure>
<p> 1.2) 永久配置IP<br> 用vi打开配置文件<code>/etc/profile</code>，加入网络配置命令</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 172.16.17.201</span><br><span class="line">ifconfig eth0 up</span><br></pre></td></tr></table></figure>
<p> 2) 重启开发板</p>
<p> 3) 查看确认</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ifconfig </span><br><span class="line">eth0      Link encap:Ethernet  HWaddr FE:12:5E:C8:00:77  </span><br><span class="line">	  inet addr:172.16.17.201  Bcast:172.16.255.255  Mask:255.255.0.0</span><br><span class="line">	  inet6 addr: fe80::fc12:5eff:fec8:77&#x2F;64 Scope:Link</span><br><span class="line">	  UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">	  RX packets:43 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">	  TX packets:6 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">	  collisions:0 txqueuelen:1000 </span><br><span class="line">	  RX bytes:3468 (3.3 KiB)  TX bytes:468 (468.0 B)</span><br><span class="line">	  Interrupt:80 </span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">	  inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">	  inet6 addr: ::1&#x2F;128 Scope:Host</span><br><span class="line">	  UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">	  RX packets:0 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">	  TX packets:0 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">	  collisions:0 txqueuelen:0 </span><br><span class="line">	  RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</span><br></pre></td></tr></table></figure>

<p> 4) 测试能否ping通</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[  206.492000] PHY: stmmac-0:04 - Link is Up - 1000&#x2F;Full	#网线连上</span><br><span class="line">[  228.540000] PHY: stmmac-0:04 - Link is Down			#网线断开</span><br><span class="line">[  234.552000] PHY: stmmac-0:04 - Link is Up - 1000&#x2F;Full</span><br><span class="line"></span><br><span class="line">$ ping 172.16.17.200</span><br><span class="line">PING 172.16.17.200 (172.16.17.200): 56 data bytes</span><br><span class="line">64 bytes from 172.16.17.200: seq&#x3D;0 ttl&#x3D;128 time&#x3D;1.132 ms</span><br><span class="line">64 bytes from 172.16.17.200: seq&#x3D;1 ttl&#x3D;128 time&#x3D;0.901 ms</span><br><span class="line">64 bytes from 172.16.17.200: seq&#x3D;2 ttl&#x3D;128 time&#x3D;0.869 ms</span><br><span class="line">64 bytes from 172.16.17.200: seq&#x3D;3 ttl&#x3D;128 time&#x3D;0.906 ms</span><br><span class="line">64 bytes from 172.16.17.200: seq&#x3D;4 ttl&#x3D;128 time&#x3D;0.964 ms</span><br><span class="line">64 bytes from 172.16.17.200: seq&#x3D;5 ttl&#x3D;128 time&#x3D;0.889 ms</span><br></pre></td></tr></table></figure></li>
<li><p>设置tftp工具（将PC设为服务器）</p>
 <img src="/BJ190619/tftp.jpg" class="">
<ul>
<li>当前目录：选择要传输的文件目录</li>
<li>Server interface：当前PC-IP，一般使用静态IP</li>
</ul>
</li>
<li><p>通过tftp传输文件<br> 1) PC发送到开发板</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">tftp PC-IP -g -r 文件		#通过tftp从服务器（PC）取得文件	</span><br><span class="line">或：</span><br><span class="line">tftp -g -r 文件 PC-IP</span><br><span class="line"></span><br><span class="line">注：文件要填写传输文件目录下完整带后缀文件名</span><br></pre></td></tr></table></figure>

<p> 2) 开发板发送到电脑</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">tftp PC-IP -p -r 文件</span><br><span class="line"></span><br><span class="line">[root@GEC6818 &#x2F;IOT]#tftp 172.16.17.200 -p -r iot</span><br><span class="line">iot                  100% |*******************************|  4250k  0:00:00 ETA</span><br><span class="line"></span><br><span class="line">用法：</span><br><span class="line">$ tftp</span><br><span class="line">BusyBox v1.25.1 (2016-12-27 14:19:25 CST) multi-call binary.</span><br><span class="line"></span><br><span class="line">Usage: tftp [OPTIONS] HOST [PORT]</span><br><span class="line"></span><br><span class="line">Transfer a file from&#x2F;to tftp server</span><br><span class="line"></span><br><span class="line">	-l FILE Local FILE</span><br><span class="line">	-r FILE Remote FILE</span><br><span class="line">	-g      Get file</span><br><span class="line">	-p      Put file</span><br><span class="line">	-b SIZE Transfer blocks of SIZE octets</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="U盘传输文件"><a href="#U盘传输文件" class="headerlink" title="U盘传输文件"></a>U盘传输文件</h3><ol>
<li>插入U盘到开发板USB接口</li>
<li>切换到U盘所在的目录 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pwd</span><br><span class="line">&#x2F;mnt&#x2F;udisk		#U盘内容所在目录</span><br></pre></td></tr></table></figure></li>
<li>通过cp命令进行文件的拷贝</li>
</ol>
<h2 id="交叉编译"><a href="#交叉编译" class="headerlink" title="交叉编译"></a>交叉编译</h2><h3 id="交叉编译作用"><a href="#交叉编译作用" class="headerlink" title="交叉编译作用"></a>交叉编译作用</h3><ol>
<li>开发板中执行project文件（在Ubuntu中使用gcc编译生成） <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;project </span><br><span class="line">-&#x2F;bin&#x2F;sh: .&#x2F;project: Permission denied		#权限拒绝</span><br></pre></td></tr></table></figure></li>
<li>查看project文件属性 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ls -l project</span><br><span class="line">-rw-r--r--   1 root   root   7161 Jan  1 13:31 project		#无执行权限</span><br></pre></td></tr></table></figure></li>
<li>添加执行权限，再次执行 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ chmod 777 project</span><br><span class="line">$ .&#x2F;project</span><br><span class="line">.&#x2F;project: line 1: syntax error: unexpected &quot;(&quot;		#依然报错，文件架构不一致</span><br></pre></td></tr></table></figure></li>
<li>在Ubuntu中查看文件属性 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ file project</span><br><span class="line">project: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU&#x2F;Linux 2.6.24, BuildID[sha1]&#x3D;0xb08b58b638cde5389b3e48434ef683e7a3b4b0d2, not stripped</span><br></pre></td></tr></table></figure>
 这里可以看到<code>Intel 80386</code>，说明该project文件是x86架构，只能在x86平台执行</li>
<li>为了使该文件是ARM架构，这就要使用交叉编译器<code>arm-linux-gcc</code>编译</li>
<li>重新在Ubuntu中编译project.c文件 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ arm-linux-gcc project.c -o project</span><br></pre></td></tr></table></figure></li>
<li>查看新project文件属性 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ file project</span><br><span class="line">project: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU&#x2F;Linux 2.6.16, not stripped</span><br></pre></td></tr></table></figure>
 这里可以看到<code>ARM</code>，说明该project文件改为ARM架构，可以在ARM平台执行</li>
<li>使用tftp传输到开发板</li>
<li>修改权限 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ chmod 777 project</span><br></pre></td></tr></table></figure></li>
<li>再次执行<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;project</span><br><span class="line">hello wydx!		#成功执行</span><br></pre></td></tr></table></figure>

</li>
</ol>
<blockquote>
<p>总结：<br>针对不同的平台需要使用不同的编译器<br><code>x86</code> —&gt; <code>gcc</code><br><code>ARM</code> —&gt; <code>arm-linux-gcc</code></p>
</blockquote>
<h3 id="安装交叉编译"><a href="#安装交叉编译" class="headerlink" title="安装交叉编译"></a>安装交叉编译</h3><ol>
<li>查看是否有已存在的<code>arm-linux-gcc</code> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ gcc-linux-arm -v</span><br></pre></td></tr></table></figure></li>
<li>拷贝交叉编译工具的压缩包 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cp arm-2009q3.tar.bz2 &#x2F;home&#x2F;gec&#x2F;</span><br></pre></td></tr></table></figure></li>
<li>解压到指定的目录下<code>/usr/local</code> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo tar jxvf arm-2009q3.tar.bz2 -C &#x2F;usr&#x2F;local&#x2F;</span><br></pre></td></tr></table></figure></li>
<li>找到<code>arm-linux-gcc</code>执行文件所在的路径<br> <code>/usr/local/arm-2009q3/bin</code></li>
<li>配置路径 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim .bashrc</span><br><span class="line">#在该文件的末尾增加以下代码:</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm-2009q3&#x2F;bin</span><br></pre></td></tr></table></figure></li>
<li>设置配置生效 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ source .bashrc		#只对当前用户有效，如果切换到root用户，则无用</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：若不生效，重启终端<br><a href="https://tsuicyne.github.io/BJ190619/#任何用户使用交叉编译">若要使在所有用户中生效</a></p>
</blockquote>
</li>
</ol>
<h1 id="文件IO"><a href="#文件IO" class="headerlink" title="文件IO"></a>文件IO</h1><h2 id="Linux文件"><a href="#Linux文件" class="headerlink" title="Linux文件"></a>Linux文件</h2><p><strong>在Linux中，一切皆文件</strong><br>普通文件：<code>.txt</code>、<code>.rar</code>、<code>.c</code>、<code>.ppt</code>等<br>设备文件：LCD屏幕<code>/dev/fb0</code>、触摸屏<code>/dev/input/event0</code>、LED灯、摄像头等</p>
<h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><h3 id="open"><a href="#open" class="headerlink" title="open"></a>open</h3><p>用于打开文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">头文件：</span><br><span class="line">#include &lt;sys&#x2F;types.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;stat.h&gt;</span><br><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line"></span><br><span class="line">函数：</span><br><span class="line">int open(const char *pathname, int flags);</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">pathname：	文件的路径名</span><br><span class="line">flags：		打开文件的权限</span><br><span class="line">O_RDONLY, O_WRONLY, or O_RDWR</span><br><span class="line">只读	  只写      可读可写</span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">成功：新的文件描述符 &gt;&#x3D;0</span><br><span class="line">失败：-1</span><br></pre></td></tr></table></figure>

<h3 id="close"><a href="#close" class="headerlink" title="close"></a>close</h3><p>用于关闭文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">头文件：</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">函数：</span><br><span class="line">int close(int fd);</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">fd：文件描述符（open函数的返回值）</span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">成功：0</span><br><span class="line">失败：-1</span><br></pre></td></tr></table></figure>

<h3 id="read"><a href="#read" class="headerlink" title="read"></a>read</h3><p>用于读取文件数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">头文件：</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">函数：</span><br><span class="line">ssize_t read(int fd, void *buf, size_t count);</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">fd：	文件描述符（open函数的返回值）</span><br><span class="line">buf：	数据缓冲区</span><br><span class="line">count：	读取的字节数</span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">成功：返回已经读取到的字节数</span><br><span class="line">失败：-1</span><br></pre></td></tr></table></figure>

<h3 id="mmap"><a href="#mmap" class="headerlink" title="mmap"></a>mmap</h3><p>用于将磁盘文件的数据映射到内存,用户通过修改内存就能修改磁盘文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">头文件：</span><br><span class="line">#include &lt;sys&#x2F;mman.h&gt;</span><br><span class="line"></span><br><span class="line">函数：</span><br><span class="line">void *mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset); </span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">addr：	指定该内存地址来做为映射内存的首地址</span><br><span class="line">	直接传NULL，由内核来自动分配一个地址给用户</span><br><span class="line">length：映射内存的大小，如果成功，为4k倍数，</span><br><span class="line">	但是，直接根据自己需要大小来输入（文件的大小）</span><br><span class="line">	不能写零</span><br><span class="line">prot：	对映射内存的保护</span><br><span class="line">	PROT_EXEC  可执行权限.</span><br><span class="line">	PROT_READ  读权限.</span><br><span class="line">	PROT_WRITE 写权限.</span><br><span class="line">	PROT_NONE  不可以访问.</span><br><span class="line">	备注:open文件指定权限应该大于等于prot设置的权限</span><br><span class="line">flags：	设置该映射内存是否可见和是否同步到文件</span><br><span class="line">	MAP_SHARED：修改内存内容并且同步到文件，相当于对映射区域的写入数据会复制回文件内</span><br><span class="line">	MAP_PRIVATE：修改内存内容不同步到文件，相当于对映射区域的写入操作会产生一个映射文件的复制，</span><br><span class="line">fd：	要映射的文件描述符</span><br><span class="line">offset：映射内存的偏移设置</span><br><span class="line">	一般不设置偏移（0）	</span><br><span class="line">	如果要设置偏移，一定设置为4K整数倍</span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">成功：	返回已经读取到的字节数</span><br><span class="line">失败：	-1</span><br></pre></td></tr></table></figure>

<h3 id="munmap"><a href="#munmap" class="headerlink" title="munmap"></a>munmap</h3><p>用于解除内存映射</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">头文件：</span><br><span class="line">#include &lt;sys&#x2F;mman.h&gt;</span><br><span class="line"></span><br><span class="line">函数：</span><br><span class="line">int munmap(void *addr, size_t length);</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">addr：	mmap返回值</span><br><span class="line">length：映射内存的大小 </span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">成功：	0</span><br><span class="line">失败：	-1</span><br></pre></td></tr></table></figure>

<h1 id="BMP刷图"><a href="#BMP刷图" class="headerlink" title="BMP刷图"></a>BMP刷图</h1><h2 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h2><p><strong>bmp格式（24位）</strong><br>参数：R G B<br>像素点：800×480<br>字节数：1152000（800×480×3）</p>
<p><strong>LCD屏幕</strong><br>设备文件：<code>/dev/fb0</code><br>参数：A R G B<br>像素点：800×480<br>字节数：1536000（800×480×4）</p>
<blockquote>
<p>注：查看LCD屏幕像素点为多少位</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@GEC6818 ~]#cat &#x2F;sys&#x2F;class&#x2F;graphics&#x2F;fb0&#x2F;bits_per_pixel </span><br><span class="line">32		#每个像素点：32位（4个字节） </span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><ol>
<li><p>利用open访问<code>example.bmp</code>图片文件及<code>/dev/fb0</code>LCD屏幕</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lcd_fd &#x3D; open(&quot;&#x2F;dev&#x2F;fb0&quot;,O_WRONLY);</span><br><span class="line">bmp_fd &#x3D; open(&quot;example.bmp&quot;,O_RDONLY);</span><br></pre></td></tr></table></figure></li>
<li><p>利用read读取<code>example.bmp</code>图片数据<br> <strong>缓冲区定义</strong><br> 缓冲区定义大小取决于图片总字节数，如这里是24位bmp图片，即图片的每个像素点24位，每个像素点3个字节，共有800×480×3字节</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">char buf[800*480*3]</span><br></pre></td></tr></table></figure>

<p> <strong>BMP图片储存时，像素点的颜色排布？</strong><br> B G R</p>
</li>
<li><p>利用write或mmap写入buf数据到LCD屏幕<br> <strong>图片只刷了4分之3？</strong><br> 只写了1152000（800×480×3）字节，但是LCD屏幕共1536000（800×480×4）字节</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">write(lcd,bmp_buf,800*480*3);</span><br></pre></td></tr></table></figure>

<p> <strong>图片只会显示黑白两色？</strong><br> 图像像素点错乱</p>
<p> <strong>图片右边某些字节显示在LCD屏幕左边</strong><br> 图片理论大小：1152000<br> 图片实际大小：1152054</p>
 <img src="/BJ190619/24bmp.jpg" class="">
<p> 多出54字节为文件属性信息,要先跳过这部分头数据，再读取图片的像素点数据<br> 利用lseek偏移</p>
<p> <strong>图片显示上下颠倒左右不颠倒</strong><br> BMP图片存储时，左下方为第一个字节</p>
</li>
<li><p>利用close关闭LCD屏幕与图片资源</p>
</li>
</ol>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>格式示例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bmp_buf: BGR xxx xxx xxx</span><br><span class="line">LCD_buf: xRGB xxxx  xxxx  xxxx</span><br><span class="line"></span><br><span class="line">	0000  0000  0000  0000  0000  0000  0000 0000</span><br><span class="line"></span><br><span class="line">				      B:    1010 1101 		</span><br><span class="line">		   	  G:    1011  1101</span><br><span class="line"> 	      R:    1101  1010</span><br><span class="line">---------------------------------------------------------</span><br><span class="line">	0000  0000  1101  1010  1011  1101  1010 1101</span><br></pre></td></tr></table></figure>
<p>示例程序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;sys&#x2F;types.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;stat.h&gt;</span><br><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;mman.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	&#x2F;&#x2F;打开文件</span><br><span class="line">	int bmp_fd &#x3D; open(&quot;.&#x2F;example.bmp&quot;,O_RDWR);</span><br><span class="line">	int lcd_fd &#x3D; open(&quot;&#x2F;dev&#x2F;fb0&quot;,O_RDWR);</span><br><span class="line">	&#x2F;&#x2F;判断文件打开是否成功</span><br><span class="line">	if(-1 &#x3D;&#x3D; lcd_fd &amp;&amp; -1 &#x3D;&#x3D; bmp_fd)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;open error!\n&quot;);</span><br><span class="line">		return -1;</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;open success!\n&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	&#x2F;&#x2F;准备存放映射内存地址的指针</span><br><span class="line">	int *lcd_addr;</span><br><span class="line">	&#x2F;&#x2F;映射LCD屏幕设备文件到内存中</span><br><span class="line">	lcd_addr &#x3D; mmap(NULL,			&#x2F;&#x2F;映射区开始地址，NULL为系统自动分配</span><br><span class="line">			800*480*4,		&#x2F;&#x2F;映射区长度（大小&#x2F;字节）</span><br><span class="line">			PROT_READ|PROT_WRITE,	&#x2F;&#x2F;内容可以被读取和写入</span><br><span class="line">			MAP_SHARED,		&#x2F;&#x2F;共享内存</span><br><span class="line">			lcd_fd,			&#x2F;&#x2F;有效的文件描述符</span><br><span class="line">			0);			&#x2F;&#x2F;被映射对象的内容起点</span><br><span class="line">	&#x2F;&#x2F;偏移54个头数据</span><br><span class="line">	lseek(bmp_fd,54,SEEK_SET);</span><br><span class="line">	&#x2F;&#x2F;读取BMP图片数据</span><br><span class="line">	char bmp_buf[800*480*3];</span><br><span class="line">	read(bmp_fd,bmp_buf,800*480*3);		&#x2F;&#x2F;一次性读取完全部数据</span><br><span class="line">	&#x2F;&#x2F;将图像上下翻转</span><br><span class="line">	int x,y;</span><br><span class="line">	for(y&#x3D;0; y&lt;480; y++)</span><br><span class="line">	&#123;</span><br><span class="line">		for(x&#x3D;0; x&lt;800; x++)</span><br><span class="line">		&#123;</span><br><span class="line">			lcd_addr[(479-y)*800+x] &#x3D; bmp_buf[(y*800+x)*3]&lt;&lt;0|bmp_buf[(y*800+x)*3+1]&lt;&lt;8|bmp_buf[(y*800+x)*3+2]&lt;&lt;16;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">	&#x2F;&#x2F;关闭文件</span><br><span class="line">	close(lcd_fd);</span><br><span class="line">	close(bmp_fd);</span><br><span class="line">	&#x2F;&#x2F;解除映射</span><br><span class="line">	munmap(lcd_addr,800*480*4);</span><br><span class="line">	</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="触屏实现"><a href="#触屏实现" class="headerlink" title="触屏实现"></a>触屏实现</h1><h2 id="相关知识-1"><a href="#相关知识-1" class="headerlink" title="相关知识"></a>相关知识</h2><p><strong>触摸屏</strong><br>设备文件：<code>/dev/input/event0</code></p>
<p><strong>什么是事件？</strong><br>当某些硬件设备接入第三方平台，这些硬件设备的状态发生改变时，就称之为事件的发生<br>如：</p>
<ul>
<li>触摸屏被滑动了一下</li>
<li>键盘的A键被摁下去，弹上来</li>
<li>鼠标的左键被摁下去</li>
</ul>
<p><strong>什么叫输入子系统？</strong><br>分析板子中的数据，转换成有意义的值（事件的类型、值）</p>
<h2 id="实现思路-1"><a href="#实现思路-1" class="headerlink" title="实现思路"></a>实现思路</h2><ol>
<li><p>利用open访问触摸屏文件</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">open(&quot;&#x2F;dev&#x2F;input&#x2F;event0&quot;,O_RDONLY);</span><br></pre></td></tr></table></figure></li>
<li><p>利用read读取文件的数据</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">read(fd,buf,sizeof(buf));</span><br></pre></td></tr></table></figure>
<p> <strong>buf是什么类型的缓冲区？</strong><br> buf的数据与输入子系统分析出来的数据类型是一致，由于输入子系统在内核中，所以类型由系统来决定，定义在Linux下的一个头文件中</p>
<p> <strong>头文件在哪里？</strong><br> Ubuntu：<code>/usr/include/linux/input.h</code><br> 在工程中包含这个头文件时<code>#include &lt;linux/input.h&gt;</code>，Linux默认在<code>/usr/include</code>中寻找头文件</p>
<p> <strong>当发生一个事件时，输入子系统就会分析出一个事件结构体</strong></p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">struct input_event &#123;</span><br><span class="line">	struct timeval time;</span><br><span class="line">	__u16 type;</span><br><span class="line">	__u16 code;</span><br><span class="line">	__s32 value;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p> 结论：buf类型是一个结构体</p>
<p> <strong>分析input_event结构体</strong></p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">struct timeval time;		&#x2F;&#x2F;事件发生时间</span><br><span class="line">__u16 type;			&#x2F;&#x2F;事件类型（鼠标事件，键盘事件，触摸屏事件）</span><br><span class="line">	</span><br><span class="line">	#define EV_KEY			0x01		&#x2F;&#x2F;键盘事件</span><br><span class="line">	#define EV_REL			0x02		&#x2F;&#x2F;鼠标事件</span><br><span class="line">	#define EV_ABS			0x03		&#x2F;&#x2F;触摸屏事件</span><br><span class="line">	</span><br><span class="line">__u16 code;			#对事件进一步描述</span><br><span class="line">	</span><br><span class="line">	#define ABS_X			0x00		&#x2F;&#x2F;触摸屏的X轴			</span><br><span class="line">	#define ABS_Y			0x01		&#x2F;&#x2F;触摸屏的Y轴</span><br><span class="line">	#define ABS_PRESSURE		0x18		&#x2F;&#x2F;触摸屏的压力值</span><br><span class="line">	#define BTN_TOUCH		0x14a		&#x2F;&#x2F;触摸屏的触摸</span><br><span class="line">				</span><br><span class="line">__s32 value;			#事件值</span><br><span class="line">	ABS_X						&#x2F;&#x2F;范围：0-800</span><br><span class="line">	ABS_Y						&#x2F;&#x2F;范围：0-480</span><br><span class="line">	ABS_PRESSURE					&#x2F;&#x2F;松开：0</span><br><span class="line">							&#x2F;&#x2F;按下：200&#x2F;250&#x2F;255&#x2F;330</span><br></pre></td></tr></table></figure></li>
<li><p>判断数据是否是自己想要读取的类型</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;松手判断</span><br><span class="line">if(buf.type &#x3D;&#x3D; EV_ABS &amp;&amp; buf.code &#x3D;&#x3D; ABS_PRESSURE &amp;&amp; buf.value &#x3D;&#x3D; 0)</span><br></pre></td></tr></table></figure></li>
<li><p>利用close关闭文件</p>
</li>
</ol>
<h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><p>示例程序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;sys&#x2F;types.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;stat.h&gt;</span><br><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;input.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	&#x2F;&#x2F;访问触摸屏文件</span><br><span class="line">	int ts_fd &#x3D; open(&quot;&#x2F;dev&#x2F;input&#x2F;event0&quot;,O_RDONLY);</span><br><span class="line">	&#x2F;&#x2F;读取文件的数据</span><br><span class="line">	&#x2F;&#x2F;定义缓冲区</span><br><span class="line">	struct input_event buf;</span><br><span class="line">	</span><br><span class="line">	int x,y;</span><br><span class="line">	&#x2F;&#x2F;输出buf的数据</span><br><span class="line">	while(1)</span><br><span class="line">	&#123;</span><br><span class="line">		read(ts_fd,&amp;buf,sizeof(buf));</span><br><span class="line">		if(buf.type &#x3D;&#x3D; EV_ABS &amp;&amp; buf.code &#x3D;&#x3D; ABS_X)</span><br><span class="line">		&#123;</span><br><span class="line">			x &#x3D; buf.value;</span><br><span class="line">		&#125;</span><br><span class="line">		if(buf.type &#x3D;&#x3D; EV_ABS &amp;&amp; buf.code &#x3D;&#x3D; ABS_Y)</span><br><span class="line">		&#123;</span><br><span class="line">			y &#x3D; buf.value;</span><br><span class="line">		&#125;</span><br><span class="line">		if(buf.type &#x3D;&#x3D; EV_KEY &amp;&amp; buf.code &#x3D;&#x3D; BTN_TOUCH &amp;&amp; buf.value &#x3D;&#x3D; 0)</span><br><span class="line">		&#123;</span><br><span class="line">			printf(&quot;x&#x3D;%d,y&#x3D;%d\n&quot;,x,y);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="语音识别"><a href="#语音识别" class="headerlink" title="语音识别"></a>语音识别</h1><h2 id="ALSA是什么"><a href="#ALSA是什么" class="headerlink" title="ALSA是什么"></a>ALSA是什么</h2><p>ALSA是Advanced Linux Sound Architecture的缩写，高级Linux声音架构的简称,它在Linux操作系统上提供了音频和MIDI（Musical Instrument Digital Interface，音乐设备数字化接口）的支持。</p>
<h2 id="ALSA库移植"><a href="#ALSA库移植" class="headerlink" title="ALSA库移植"></a>ALSA库移植</h2><p>交叉编译<code>alsa-lib-1.0.22.tar.bz2</code>与<code>alsa-utils-1.0.22.tar.bz2</code></p>
<p><strong>alsa-lib-1.0.22.tar.bz2</strong></p>
<ol>
<li>回到库所在的路径 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd &#x2F;mnt&#x2F;hgfs&#x2F;05 语音识别&#x2F;code&#x2F;ALSA</span><br></pre></td></tr></table></figure></li>
<li>解压到~目录 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ tar jxvf alsa-lib-1.0.22.tar.bz2 -C ~</span><br></pre></td></tr></table></figure></li>
<li>在家目录中创建安装目录，并给权限 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mkdir &#x2F;home&#x2F;gec&#x2F;alsa&#x2F;</span><br><span class="line">$ chmod 777 &#x2F;home&#x2F;gec&#x2F;alsa</span><br></pre></td></tr></table></figure></li>
<li>进入库解压后所在的目录下 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd &#x2F;home&#x2F;gec&#x2F;alsa-lib-1.0.22</span><br></pre></td></tr></table></figure></li>
<li>配置 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;configure --host&#x3D;arm-linux --prefix&#x3D;&#x2F;home&#x2F;gec&#x2F;alsa --disable-python</span><br></pre></td></tr></table></figure></li>
<li>编译 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ make</span><br></pre></td></tr></table></figure></li>
<li>安装 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ make install</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p><strong>alsa-utils-1.0.22.tar.bz2</strong></p>
<ol>
<li>回到库所在的路径 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd &#x2F;mnt&#x2F;hgfs&#x2F;05 语音识别&#x2F;code&#x2F;ALSA</span><br></pre></td></tr></table></figure></li>
<li>解压到~目录 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ tar jxvf alsa-utils-1.0.22.tar.bz2 -C ~</span><br></pre></td></tr></table></figure></li>
<li>进入库解压后所在的目录下 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd &#x2F;home&#x2F;gec&#x2F;alsa-utils-1.0.22</span><br></pre></td></tr></table></figure></li>
<li>配置 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;configure --host&#x3D;arm-linux --prefix&#x3D;&#x2F;home&#x2F;gec&#x2F;alsa --with-alsa-prefix&#x3D;&#x2F;home&#x2F;gec&#x2F;alsa&#x2F;lib --with-alsa-inc-prefix&#x3D;&#x2F;home&#x2F;gec&#x2F;alsa&#x2F;include --disable-alsamixer --disable-xmlto</span><br></pre></td></tr></table></figure></li>
<li>编译 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ make</span><br><span class="line"></span><br><span class="line">出现错误1：</span><br><span class="line">make[2]: Entering directory &#96;&#x2F;home&#x2F;gec&#x2F;alsa-utils-1.0.22&#x2F;alsaconf&#x2F;po&#39;</span><br><span class="line">mv: cannot stat &#96;t-ja.gmo&#39;: No such file or directory</span><br><span class="line">make[2]: *** [ja.gmo] Error 1</span><br><span class="line"></span><br><span class="line">解决方案：</span><br><span class="line">#在&#x2F;home&#x2F;gec&#x2F;alsa-utils-1.0.22&#x2F;alsaconf&#x2F;po创建t-ja.gmo文件</span><br><span class="line">$ touch alsaconf&#x2F;po&#x2F;t-ja.gmo</span><br><span class="line">#重新编译</span><br><span class="line">$ make</span><br><span class="line"></span><br><span class="line">出现错误2：</span><br><span class="line">make[2]: Entering directory &#96;&#x2F;home&#x2F;gec&#x2F;alsa-utils-1.0.22&#x2F;alsaconf&#x2F;po&#39;</span><br><span class="line">mv: cannot stat &#96;t-ru.gmo&#39;: No such file or directory</span><br><span class="line">make[2]: *** [ru.gmo] Error 1</span><br><span class="line">解决方案：</span><br><span class="line">#在&#x2F;home&#x2F;gec&#x2F;alsa-utils-1.0.22&#x2F;alsaconf&#x2F;po创建t-ru.gmo文件</span><br><span class="line">$ touch alsaconf&#x2F;po&#x2F;t-ru.gmo</span><br><span class="line">#重新编译</span><br><span class="line">$ make</span><br><span class="line">#安装</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="ALSA库放置到开发板"><a href="#ALSA库放置到开发板" class="headerlink" title="ALSA库放置到开发板"></a>ALSA库放置到开发板</h2><ol>
<li>在Ubuntu先回到移植好的ALSA库所在的路径 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd ~</span><br></pre></td></tr></table></figure></li>
<li>压缩移植好的ALSA库 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ tar zcvf alsa.tar.gz alsa&#x2F;</span><br></pre></td></tr></table></figure></li>
<li>把ALSA库的压缩包拷贝到共享目录 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cp alsa.tar.gz &#x2F;mnt&#x2F;hgfs&#x2F;wydx&#x2F;13\ 语音识别&#x2F;code&#x2F;ALSA&#x2F;</span><br></pre></td></tr></table></figure></li>
<li>把<code>alsa.tar.gz</code>下载开发板中</li>
<li>在开发板中解压<code>alsa.tar.gz</code> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ tar zxvf alsa.tar.gz</span><br></pre></td></tr></table></figure></li>
<li>分析ALSA库的文件<br> <code>/alsa/bin</code>：可执行文件<br> <code>/alsa/lib</code>：库文件</li>
<li>添加永久性的环境变量<br> 打开板子的脚本文件 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vi &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>
 在文件的中间添加一下的内容 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;alsa&#x2F;lib:$LD_LIBRARY_PATH                          </span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;alsa&#x2F;bin</span><br></pre></td></tr></table></figure>
 生效该脚本文件 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>
 查看环境变量 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ env</span><br></pre></td></tr></table></figure></li>
<li>指定ALSA库的配置文件<br> 将<code>/alsa/share/alsa/</code>拷贝到<code>/usr/share/</code> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cp &#x2F;alsa&#x2F;share&#x2F;alsa&#x2F; &#x2F;usr&#x2F;share&#x2F; -r</span><br></pre></td></tr></table></figure>
 将<code>/alsa</code>拷贝到<code>/home/gec/</code> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cp &#x2F;alsa &#x2F;home&#x2F;gec&#x2F; -rf		#如果&#x2F;home&#x2F;gec不存在，则需要创建</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="注册设备节点文件"><a href="#注册设备节点文件" class="headerlink" title="注册设备节点文件"></a>注册设备节点文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#注册依赖的设备文件节点</span><br><span class="line">$ mkdir &#x2F;dev&#x2F;snd</span><br><span class="line">$ cd &#x2F;dev&#x2F;snd</span><br><span class="line"></span><br><span class="line">#创建某个设备节点</span><br><span class="line">mknod dsp c 14 3	</span><br><span class="line">mknod audio c 14 4</span><br><span class="line">mknod mixer c 14 0</span><br><span class="line">mknod controlC0 c 116 0</span><br><span class="line">mknod seq c 116 1</span><br><span class="line">mknod pcmC0D0c c 116 24</span><br><span class="line">mknod pcmC0D0p c 116 16</span><br><span class="line">mknod pcmC0D1c c 116 25</span><br><span class="line">mknod pcmC0D1p c 116 17</span><br><span class="line">mknod timer c 116 33</span><br></pre></td></tr></table></figure>

<h2 id="录音与播放测试"><a href="#录音与播放测试" class="headerlink" title="录音与播放测试"></a>录音与播放测试</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;alsa&#x2F;bin	#arecord	录音</span><br><span class="line">&#x2F;alsa&#x2F;bin	#aplay		播放</span><br></pre></td></tr></table></figure>

<p><strong>录音：arecord</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ arecord -d3 -c1 -r16000 -twav -fS16_LE abc.wav</span><br><span class="line">Recording WAVE &#39;abc.wav&#39; : Signed 16 bit Little Endian, Rate 16000 Hz, Mono	#正在录音</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-d, --duration&#x3D;#        interrupt after # seconds		#录音的秒数</span><br><span class="line">-c, --channels&#x3D;#        channels				#音轨</span><br><span class="line">-r, --rate&#x3D;#            sample rate				#采样频率</span><br><span class="line">-t, --file-type TYPE    file type (voc, wav, raw or au)		#封装的格式</span><br><span class="line">-f, --format&#x3D;FORMAT     sample format (case insensitive)	#量化位数</span><br></pre></td></tr></table></figure>

<p><strong>播放：aplay</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ aplay abc.wav </span><br><span class="line">Playing WAVE &#39;abc.wav&#39; : Signed 16 bit Little Endian, Rate 16000 Hz, Mono	#正在播放</span><br></pre></td></tr></table></figure>

<h2 id="语音的识别"><a href="#语音的识别" class="headerlink" title="语音的识别"></a>语音的识别</h2><p>该语音识别基于科大讯飞开源库</p>
<h3 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">F:\05 语音识别\code\robot_project		#科大讯飞SDK原生包</span><br><span class="line">	gec210&#x2F;</span><br><span class="line">		inc&#x2F;				#210工程中使用函数的头文件</span><br><span class="line">		lib&#x2F;				#210工程中使用的库文件</span><br><span class="line">		voicectl.c			#开发板端控制的源码</span><br><span class="line">	x86&#x2F;</span><br><span class="line">		bin&#x2F;</span><br><span class="line">			msc&#x2F;			#识别的记录文件</span><br><span class="line">			pcm&#x2F;			#识别的音频文件</span><br><span class="line">			asr_record_demo		#可执行文件</span><br><span class="line">			cmd.bnf			#识别的语法文件</span><br><span class="line">			result.xml		#SDK识别的结果存档</span><br><span class="line">		example&#x2F;</span><br><span class="line">			asr_record_demo		#SDK的例程</span><br><span class="line">		lib&#x2F;				#SDK的识别库			</span><br><span class="line">		BNF语法手册.pdf</span><br><span class="line">	Makefile				#工程管理文件，用于编译程序</span><br></pre></td></tr></table></figure>

<h3 id="分析SDK例程"><a href="#分析SDK例程" class="headerlink" title="分析SDK例程"></a>分析SDK例程</h3><p>例程源码：<code>F:\05 语音识别\code\robot_project\x86\examples\asr_record_demo\asr_record_demo.c</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;登录账号</span><br><span class="line">	MSPLogin();</span><br><span class="line">&#x2F;&#x2F;构建语法网络</span><br><span class="line">	build_grammar();				&#x2F;&#x2F;加载x86&#x2F;bin&#x2F;cmd.bnf语法</span><br><span class="line">&#x2F;&#x2F;开始识别</span><br><span class="line">	run_asr();</span><br><span class="line">		&#x2F;&#x2F;与开发板端建立连接</span><br><span class="line">			init_sock();</span><br><span class="line">				socket();		&#x2F;&#x2F;建立未连接套接字</span><br><span class="line">				bind();			&#x2F;&#x2F;绑定IP地址作为服务器  192.168.0.102</span><br><span class="line">				listen();		&#x2F;&#x2F;把未连接套接字设置为监听套接字</span><br><span class="line">				accept();		&#x2F;&#x2F;接受对方的连接  ---&gt;  得到已连接套接字</span><br><span class="line">		&#x2F;&#x2F;获取音频文件</span><br><span class="line">			get_audio_file();</span><br><span class="line">		&#x2F;&#x2F;分析音频文件</span><br><span class="line">			demo_file(&quot;pcm&#x2F;cmd.pcm&quot;);</span><br><span class="line">			struct speech_rec_notifier recnotifier &#x3D;</span><br><span class="line">			&#123;</span><br><span class="line">				on_result,		&#x2F;&#x2F;识别的结果</span><br><span class="line">				on_speech_begin,	&#x2F;&#x2F;开始下一次的识别</span><br><span class="line">				on_speech_end		&#x2F;&#x2F;识别结束</span><br><span class="line">			&#125;;		</span><br><span class="line">		&#x2F;&#x2F;初始化引擎语法</span><br><span class="line">			sr_init();</span><br><span class="line">		&#x2F;&#x2F;把音频传入引擎中，进行识别</span><br><span class="line">			sr_start_listening();</span><br><span class="line">		&#x2F;&#x2F;不断进行识别</span><br><span class="line">			sr_write_audio_data();</span><br><span class="line">		&#x2F;&#x2F;识别完毕，把结果存在on_result</span><br><span class="line">			sr_stop_listening();</span><br></pre></td></tr></table></figure>

<h3 id="使用SDK原生包"><a href="#使用SDK原生包" class="headerlink" title="使用SDK原生包"></a>使用SDK原生包</h3><ol>
<li>修改语法<br> 语法文件：<code>F:\05 语音识别\code\robot_project\x86\bin\cmd.bnf</code></li>
<li>编译SDK <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd &#x2F;mnt&#x2F;hgfs&#x2F;05 语音识别&#x2F;code&#x2F;robot_project</span><br><span class="line">$ make</span><br></pre></td></tr></table></figure></li>
<li>切换可执行文件的路径下 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd &#x2F;mnt&#x2F;hgfs&#x2F;05 语音识别&#x2F;code&#x2F;robot_project&#x2F;x86&#x2F;bin</span><br><span class="line">$ .&#x2F;asr_record_demo</span><br><span class="line">构建离线识别语法网络...</span><br><span class="line">构建语法失败！11212		#当前的时间不在SDK的试用日期内</span><br><span class="line">语音识别完毕.</span><br></pre></td></tr></table></figure></li>
<li>修改Ubuntu日期为<code>2016.12.15</code></li>
<li>再次执行文件 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;asr_record_demo</span><br><span class="line">构建离线识别语法网络...</span><br><span class="line">构建语法成功！ 语法ID:cmd</span><br><span class="line">离线识别语法网络构建完成，开始识别...</span><br><span class="line">wait for connecting ...</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="分析GEC210源码"><a href="#分析GEC210源码" class="headerlink" title="分析GEC210源码"></a>分析GEC210源码</h3><p>源码路径：<code>F:\05 语音识别\code\robot_project\gec210\voicectl.c</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;与服务器之间建立连接</span><br><span class="line">	init_sock();</span><br><span class="line">&#x2F;&#x2F;输入一个数字，在3秒内录音</span><br><span class="line">	printf(&quot;input num to start REC in 3s...\n&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;num);</span><br><span class="line">	system(&quot;arecord -d3 -c1 -r16000 -traw -fS16_LE cmd.pcm&quot;);	#录音</span><br><span class="line">&#x2F;&#x2F;把音频文件通过网络传输到服务器上</span><br><span class="line">	send_pcm(sockfd, PCM_FILE);</span><br><span class="line">&#x2F;&#x2F;等待结果（ID）</span><br><span class="line">	xmlChar *id &#x3D; wait4id(sockfd);</span><br><span class="line">&#x2F;&#x2F;将字符串的id转化成为整形的id</span><br><span class="line">	id_num&#x3D;atoi((char *)id);</span><br><span class="line">&#x2F;&#x2F;判断ID</span><br><span class="line">	if(id_num &#x3D;&#x3D; 999)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;bye-bye!\n&quot;);	</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用GEC210源码"><a href="#使用GEC210源码" class="headerlink" title="使用GEC210源码"></a>使用GEC210源码</h3><ol>
<li>配置Ubuntu的IP地址 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo ifconfig eth0 172.16.17.202</span><br></pre></td></tr></table></figure></li>
<li>确保开发板与Ubuntu之间是连通 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本次测试IP：</span><br><span class="line">GEC6818-IP：172.16.17.201</span><br><span class="line">Ubuntu-IP：172.16.17.202</span><br></pre></td></tr></table></figure></li>
<li>切换到工程管理文件所在的路径 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd &#x2F;mnt&#x2F;hgfs&#x2F;05 语音识别&#x2F;code&#x2F;robot_project&#x2F;</span><br></pre></td></tr></table></figure></li>
<li>编译 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ make</span><br></pre></td></tr></table></figure></li>
<li>把<code>/mnt/hgfs/05 语音识别/code/robot_project/gec210</code>下的<code>voicectl</code>下载到开发板中</li>
<li>把<code>F:\05 语音识别\code\robot_project\gec210\lib</code>全部库文件下载开发板中的<code>/lib</code></li>
<li>在Ubuntu中执行<code>/05 语音识别/code/robot_project/x86/bin/asr_record_demo</code> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;asr_record_demo</span><br><span class="line">构建离线识别语法网络...</span><br><span class="line">构建语法成功！ 语法ID:cmd</span><br><span class="line">离线识别语法网络构建完成，开始识别...</span><br><span class="line">wait for connecting ...</span><br></pre></td></tr></table></figure></li>
<li>开发板执行<code>voicectl</code>，后面加上语音识别引擎服务器IP（Ubuntu-IP） <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;voicectl 172.16.17.202</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><h2 id="修改默认路径"><a href="#修改默认路径" class="headerlink" title="修改默认路径"></a>修改默认路径</h2><ol>
<li>通过vi工具打开系统配置文件 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vi &#x2F;etc&#x2F;profile			#开发板在启动过程中，会执行该配置文件</span><br></pre></td></tr></table></figure></li>
<li>在该文件中找到以下两行代码 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;IOT					#进入&#x2F;IOT命令</span><br><span class="line">.&#x2F;iot					#执行iot程序，默认程序是一个 QT程序</span><br><span class="line">&#x2F;&#x2F;把这两个命令增加注释：&#96;#&#96;，修改如下：</span><br><span class="line">#cd &#x2F;IOT</span><br><span class="line">#.&#x2F;iot					#注释该命令，开发板启动完成后，界面显示企业Logo界面，在该文件中可以设置开机自启动程序</span><br><span class="line">&#x2F;&#x2F;修改完成，&#96;:wq&#96;，保存退出</span><br></pre></td></tr></table></figure></li>
<li>通过reboot重启开发板，使得配置生效 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reboot					#重启开发板，该命令只对Linux系统有效	</span><br><span class="line">[    4.586000] usbcore: registered new interface driver rtl8723bu</span><br><span class="line">$ </span><br><span class="line">$ ls</span><br><span class="line">IOT         driver      linuxrc     proc        sbin        usr</span><br><span class="line">bin         etc         lost+found  root        sys         var</span><br><span class="line">dev         lib         mnt         run         tmp</span><br><span class="line"></span><br><span class="line">[GEC6818]				#uboot系统，对reboot失效，需要使用reset来进行开发板重启</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="任何用户使用交叉编译"><a href="#任何用户使用交叉编译" class="headerlink" title="任何用户使用交叉编译"></a>任何用户使用交叉编译</h2><ol>
<li>通过vi工具打开系统配置文件 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vi &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure></li>
<li>在该文件中末尾增加以下代码 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm-2009q3&#x2F;bin</span><br></pre></td></tr></table></figure></li>
<li>让设置生效 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="查看硬盘空间大小"><a href="#查看硬盘空间大小" class="headerlink" title="查看硬盘空间大小"></a>查看硬盘空间大小</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ df -h</span><br><span class="line">Filesystem                Size      Used Available Use% Mounted on</span><br><span class="line">&#x2F;dev&#x2F;root               492.1M    290.7M    201.4M  59% &#x2F;</span><br><span class="line">devtmpfs                396.1M         0    396.1M   0% &#x2F;dev</span><br><span class="line">tmpfs                   404.2M         0    404.2M   0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs                   404.2M         0    404.2M   0% &#x2F;tmp</span><br><span class="line">tmpfs                   404.2M         0    404.2M   0% &#x2F;run</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：若在传输文件过程中出现<code>tftp write error</code>，则可能是空间不足</p>
</blockquote>
<br/>

<hr>
<h1 id="编辑日志"><a href="#编辑日志" class="headerlink" title="编辑日志"></a>编辑日志</h1><p><strong>20/03/19</strong><br>1.&ensp;更改文章代码样式<br>2.&ensp;调整文章排版<br>3.&ensp;修复文章超链接失效问题</p>
<p><strong>20/01/21</strong><br>1.&ensp;更改文章编码位置</p>
<p><strong>19/07/06</strong><br>1.&ensp;完善文章摘要部分</p>
<p><strong>19/07/05</strong><br>1.&ensp;完善文章后续章节</p>
<p><strong>19/06/22</strong><br>1.&ensp;修复文章超链接失效问题</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>项目</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
        <tag>C</tag>
        <tag>嵌入式</tag>
        <tag>语音识别</tag>
      </tags>
  </entry>
  <entry>
    <title>激光电子打靶系统实现算法</title>
    <url>/BJ190524/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Beluga ID" /><label>Beluga ID</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="30b9c7159af4e764261eee2ae4e577e6171d5d03b279ef5146236bb770280250"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>笔记</category>
        <category>项目</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Encrypted</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Arduino的智能家居控制系统</title>
    <url>/BJ190519/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Beluga ID" /><label>Beluga ID</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="e80e20d42f0f636715f4ea29d6bc1584b90db097da8bf7b2fa6a7e77f817643a"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>笔记</category>
        <category>项目</category>
      </categories>
      <tags>
        <tag>Encrypted</tag>
        <tag>Arduino</tag>
        <tag>C</tag>
        <tag>Gizwits</tag>
        <tag>Gokit</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux：文件与目录管理</title>
    <url>/BJ190405/</url>
    <content><![CDATA[<p><em>#BJ190405</em><br>本篇主要讲如何操作与管理Linux文件和目录。包括在不同的目录间变换、 建立与删除目录、建立与删除文件，还有寻找文件、查阅文件内容等。<br>-P161-</p>
<a id="more"></a>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<h1 id="目录与路径"><a href="#目录与路径" class="headerlink" title="目录与路径"></a>目录与路径</h1><h2 id="相对路径与绝对路径"><a href="#相对路径与绝对路径" class="headerlink" title="相对路径与绝对路径"></a>相对路径与绝对路径</h2><p>有关绝对路径相对路径的概念在上一篇有所介绍<br><a href="https://tsuicyne.github.io/BJ190324/#绝对路径与相对路径">点击空降</a><br>那么相对路径和绝对路径有什么用处呢？假设你写了一个软件，这个软件共需要3个目录：<code>/etc</code>，<code>/bin</code>，<code>/man</code>。由于不同人喜欢把软件安装在不同的位置，如甲安装在<code>/usr/local/packages</code>，乙安装在<code>/home/packages</code>，这时如果使用绝对路径的话，就会非常麻烦</p>
<h2 id="目录的相关操作"><a href="#目录的相关操作" class="headerlink" title="目录的相关操作"></a>目录的相关操作</h2><h3 id="一些特殊的目录"><a href="#一些特殊的目录" class="headerlink" title="一些特殊的目录"></a>一些特殊的目录</h3><p><code>.</code>：当前目录<br><code>..</code>：上一层目录<br><code>-</code>：前一个工作目录<br><code>~</code>：目前登录用户的主文件夹<br><code>~account</code>：account用户的主文件夹</p>
<h3 id="几个常见的处理目录的命令"><a href="#几个常见的处理目录的命令" class="headerlink" title="几个常见的处理目录的命令"></a>几个常见的处理目录的命令</h3><h4 id="切换目录：cd"><a href="#切换目录：cd" class="headerlink" title="切换目录：cd"></a>切换目录：cd</h4><p>这个命令是change directory简称，用来切换工作目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">cd [绝对路径或相对路径]</span><br><span class="line"></span><br><span class="line">#切换到beluga账户的主文件夹</span><br><span class="line">$ cd ~beluga</span><br><span class="line"></span><br><span class="line">#切换到自己账户的主文件夹</span><br><span class="line">$ cd ~</span><br><span class="line"></span><br><span class="line">#切换到上一层目录</span><br><span class="line">$ cd ..</span><br><span class="line"></span><br><span class="line">#切换到刚刚那个目录</span><br><span class="line">$ cd -</span><br><span class="line"></span><br><span class="line">#切换目录（绝对路径）</span><br><span class="line">$ cd &#x2F;var&#x2F;spool&#x2F;mail</span><br><span class="line"></span><br><span class="line">#切换目录（相对路径）</span><br><span class="line">$ cd ..&#x2F;mqueue</span><br></pre></td></tr></table></figure>

<h4 id="显示当前目录：pwd"><a href="#显示当前目录：pwd" class="headerlink" title="显示当前目录：pwd"></a>显示当前目录：pwd</h4><p>这个命令是print working directory简称，用来显示当前所在目录。由于许多软件使用的目录名称都相同，但Linux通常只列出最后的那个目录，这时你就可以使用这个命令来取得当前目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">pwd [-p]</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-p：显示出当前路径，而非使用连接（link）路径</span><br></pre></td></tr></table></figure>

<h4 id="新建目录：mkdir"><a href="#新建目录：mkdir" class="headerlink" title="新建目录：mkdir"></a>新建目录：mkdir</h4><p>这个命令是make directory简称，默认情况下所需的目录得一层一层创建<br>不过，可以使用<code>-p</code>参数来创建多层目录<br>另外，还可以使用<code>-m</code>来强制给予新目录的权限。若是没有指定，那么默认的目录权限跟umask有关</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">mkdir [-mp] 目录名</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-m：配置权限</span><br><span class="line">-p：帮你直接把所需目录递归创建</span><br><span class="line"></span><br><span class="line">#新建目录</span><br><span class="line">$ mkdir testdir</span><br><span class="line"></span><br><span class="line">#新建多层目录</span><br><span class="line">$ mkdir -p testdir1&#x2F;testdir2</span><br><span class="line"></span><br><span class="line">#新建权限为rwx--x--x目录</span><br><span class="line">$ mkdir -m 711 testdir</span><br></pre></td></tr></table></figure>

<h4 id="删除空目录：rmdir"><a href="#删除空目录：rmdir" class="headerlink" title="删除空目录：rmdir"></a>删除空目录：rmdir</h4><p>目录需要一层层地删除，而且被删除的目录中必定不能存在其他目录或文件。那如果要将目录下的文件一同删除可以使用<code>rm -r 目录</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">rmdir [-p] 目录</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-p：连同上层空目录一起删除</span><br><span class="line"></span><br><span class="line">#删除目录</span><br><span class="line">$ rmdir testdir</span><br><span class="line"></span><br><span class="line">#删除多层空目录</span><br><span class="line">$ rmdir -p testdir1&#x2F;testdir2</span><br></pre></td></tr></table></figure>

<h2 id="执行文件路径的变量：-PATH"><a href="#执行文件路径的变量：-PATH" class="headerlink" title="执行文件路径的变量：$PATH"></a>执行文件路径的变量：$PATH</h2><p>我们知道查看文件的命令<code>ls</code>的完整文件名为<code>/bin/ls</code>，那我们为什么可以在任何地方只输入<code>ls</code>就能执行呢？这是因为环境变量PATH的帮助，当我们执行一个命令时，就如<code>ls</code>，系统会去每个PATH定义的目录下查找名为<code>ls</code>可执行文件，如果有多个同名文件，那么先查询到的先执行。我们可以通过执行<code>echo $PATH</code>命令看看多少目录被定义，<code>$</code>表示后面加的是变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ echo $PATH</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;games:&#x2F;usr&#x2F;local&#x2F;games:&#x2F;snap&#x2F;bin</span><br></pre></td></tr></table></figure>
<p>PATH这个变量由一大堆目录组成，每个目录用<code>:</code>隔开，目录之间有顺序之分</p>
<h1 id="文件与目录管理"><a href="#文件与目录管理" class="headerlink" title="文件与目录管理"></a>文件与目录管理</h1><h2 id="查看文件与目录：ls"><a href="#查看文件与目录：ls" class="headerlink" title="查看文件与目录：ls"></a>查看文件与目录：ls</h2><p>在Linux系统中，<code>ls</code>命令可能是最常被执行的。Linux的文件记录的信息实在太多了，<code>ls</code>没有必要每次都全部列出来。所以其默认显示的只有非隐藏文件的文件名、文件名排序及文件名代表的颜色显示。如果还需要显示别的信息时就需要使用特定的参数<br>不论如何，<code>ls</code>最常被使用的还是<code>-l</code>参数，因此很多distribution默认就将<code>ll</code>设置成<code>ls -l</code>的意思了，这个功能是<code>bash shell</code>的<code>alias</code>功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">ls [-aAdfFhilnrRSt] 目录名</span><br><span class="line">ls [--color&#x3D;&#123;never,auto,always&#125;] 目录名</span><br><span class="line">ls [--full-time] 目录名</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-a：列出全部文件，连同隐藏文件</span><br><span class="line">-A：列出全部文件，连同隐藏文件（不包括.和..这两个目录）</span><br><span class="line">-d：仅列出目录，不列出文件</span><br><span class="line">-f：直接列出结果，不进行排序（默认会以文件名排序）</span><br><span class="line">-F：根据文件、目录等信息给予附加数据结构，如：</span><br><span class="line">	*：代表可执行文件，&#x2F;：代表目录，&#x3D;：代表socket文件，|：代表FIFO文件</span><br><span class="line">-h：将文件大小以KB、GB等方式列出来</span><br><span class="line">-i：列出inode号码</span><br><span class="line">-l：列出长数据串（文件属性权限10字符串）</span><br><span class="line">-n：列出UID和GID，而非用户和用户组名称</span><br><span class="line">-r：将排序结果反向输出</span><br><span class="line">-R：连同子目录的内容一起显示</span><br><span class="line">-S：以文件容量大小排序，而不是文件名</span><br><span class="line">-t：以时间排序，而不是文件名</span><br><span class="line">--color&#x3D;never：不要依据文件特征给予颜色显示</span><br><span class="line">--color&#x3D;always：显示颜色</span><br><span class="line">--color&#x3D;auto：系统自行判断是否给予颜色</span><br><span class="line">--full-time：以完整时间模式输出</span><br><span class="line">--full&#x3D;&#123;atime,ctime&#125;：输出访问时间或状态更改时间，而非内容更改时间</span><br><span class="line"></span><br><span class="line">#将主文件夹下所有文件列出来</span><br><span class="line">$ ls -al ~</span><br><span class="line">总用量 140</span><br><span class="line">drwxr-xr-x 22 beluga beluga 4096 3月  30 19:57 .</span><br><span class="line">drwxr-xr-x  3 root   root   4096 3月   4 12:08 ..</span><br><span class="line">-rw-r--r--  1 beluga beluga  161 3月   7 17:48 123</span><br><span class="line">-rw-------  1 beluga beluga 2014 3月  27 16:09 .bash_history</span><br><span class="line">-rw-r--r--  1 beluga beluga  220 3月   4 12:08 .bash_logout</span><br><span class="line">-rw-r--r--  1 beluga beluga 3771 3月   4 12:08 .bashrc</span><br><span class="line">drwx------ 18 beluga beluga 4096 3月  10 15:20 .cache</span><br><span class="line">drwx------ 19 beluga beluga 4096 3月  27 16:07 .config</span><br><span class="line">-rwxrwxr-x  1 root   beluga    5 3月  10 15:18 test.txt</span><br><span class="line">#可以看到以.开头的文件，以及.和..目录文件</span><br></pre></td></tr></table></figure>

<h2 id="复制、删除与移动：cp，rm，mv"><a href="#复制、删除与移动：cp，rm，mv" class="headerlink" title="复制、删除与移动：cp，rm，mv"></a>复制、删除与移动：cp，rm，mv</h2><h3 id="复制文件或目录：cp"><a href="#复制文件或目录：cp" class="headerlink" title="复制文件或目录：cp"></a>复制文件或目录：cp</h3><p>这个命令是copy简称。这个命令除了单纯复制之外，还有创建连接文件（快捷方式），对比两文件新旧予以更新以及复制整个目录等功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">cp [-adfilprsu] 源文件 目标文件</span><br><span class="line">cp [options] 源文件1 源文件2 源文件3 ... 目录</span><br><span class="line">#如果源文件有两个以上，则目标文件要是目录才行</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-a：相当与-pdr的意思</span><br><span class="line">-d：若源文件为连接文件，则复制连接文件而非文件本身</span><br><span class="line">-f：强制force简称，若目标文件已经存在且无法开启，则删除后再尝试一次</span><br><span class="line">-i：若目标文件已经存在，在覆盖时会先询问操作的进行</span><br><span class="line">-l：进行硬连接(hard link)的连接文件创建，而非复制文件本身</span><br><span class="line">-p：连同文件属性一起复制过去，而非使用默认属性</span><br><span class="line">-r：递归持续复制，用于目录的复制行为</span><br><span class="line">-s：复制成为符号连接文件(symbolic link)，即创建快捷方式</span><br><span class="line">-u：若目标文件(destination)比源文件(source)旧才更新目标文件</span><br><span class="line"></span><br><span class="line">#将主文件夹下的.bashrc复制到&#x2F;tmp下，更名为bashrc</span><br><span class="line">$ cp ~&#x2F;.bashrc &#x2F;tmp&#x2F;bashrc</span><br><span class="line"></span><br><span class="line">#重复相同动作，加入-i参数</span><br><span class="line">$ cp -i ~&#x2F;.bashrc &#x2F;tmp&#x2F;bashrc</span><br><span class="line">cp：是否覆盖&#39;&#x2F;tmp&#x2F;bashrc&#39;？ y		&lt;&#x3D;n:不覆盖 y:覆盖</span><br><span class="line"></span><br><span class="line">#切换到&#x2F;tmp，并将&#x2F;var&#x2F;log&#x2F;wtmp复制到&#x2F;tmp且查看两者属性和建立时间差别</span><br><span class="line">$ cd &#x2F;tmp</span><br><span class="line">$ cp &#x2F;var&#x2F;log&#x2F;wtmp .</span><br><span class="line">$ ls -l &#x2F;var&#x2F;log&#x2F;wtmp wtmp</span><br><span class="line">-rw-rw-r-- 1 root   utmp   41856 3月  31 14:25 &#x2F;var&#x2F;log&#x2F;wtmp</span><br><span class="line">-rw-r--r-- 1 beluga beluga 41856 3月  31 15:57 wtmp</span><br><span class="line">#默认条件cp源文件与目标文件的权限是不同的，目标文件的所有者通常就是命令执行人，所以复制过来的用户和用户组都变成beluga</span><br><span class="line"></span><br><span class="line">#如果要将文件所有特性一起复制过来，使用-a参数</span><br><span class="line">$ cp -a &#x2F;var&#x2F;log&#x2F;wtmp wtmp2</span><br><span class="line">$ ls -l  &#x2F;var&#x2F;log&#x2F;wtmp wtmp2</span><br><span class="line">-rw-rw-r-- 1 root utmp 41856 3月  31 14:25 &#x2F;var&#x2F;log&#x2F;wtmp</span><br><span class="line">-rw-rw-r-- 1 root utmp 41856 3月  31 14:25 wtmp2</span><br><span class="line">#由于beluga身份不能随意修改文件用户和用户组，所以若是使用beluga账户则只能复制权限时间等属性</span><br><span class="line"></span><br><span class="line">#复制&#x2F;etc这个目录下的所有内容到&#x2F;tmp目录下</span><br><span class="line">$ cp -r &#x2F;etc &#x2F;tmp</span><br><span class="line"></span><br><span class="line">#将前面复制过来的bashrc文件创建连接文件</span><br><span class="line">$ ls -l bashrc</span><br><span class="line">-rw-r--r-- 1 beluga beluga 3771 3月  31 15:51 bashrc</span><br><span class="line">$ cp -s bashrc bashrc_slink</span><br><span class="line">$ cp -l bashrc bashrc_hlink</span><br><span class="line">$ ls -l bashrc*</span><br><span class="line">-rw-r--r-- 2 beluga beluga 3777 3月  31 16:21 bashrc</span><br><span class="line">-rw-r--r-- 2 beluga beluga 3777 3月  31 16:21 bashrc_hlink</span><br><span class="line">lrwxrwxrwx 1 beluga beluga    6 3月  31 16:24 bashrc_slink -&gt; bashrc</span><br><span class="line">#-s是软连接，bashrc_slink是一个快捷方式，连到bashrc，所以文件名右侧有个-&gt;指向符号</span><br><span class="line">#-l是硬连接，bashrc_hlink文件和bashrc文件属性和权限一模一样，差异是第二列的link变大</span><br><span class="line"></span><br><span class="line">#若~&#x2F;.bashrc比&#x2F;tmp&#x2F;bashrc新才复制</span><br><span class="line">$ cp -u ~&#x2F;.bashrc &#x2F;tmp&#x2F;bashrc</span><br><span class="line"></span><br><span class="line">#将前面生成的bashrc_slink复制成为bashrc_slink_1和bashrc_slink_2</span><br><span class="line">$ cp bashrc_slink bashrc_slink_1</span><br><span class="line">$ cp -d bashrc_slink bashrc_slink_2</span><br><span class="line">$ ls -l bashrc bashrc_slink*</span><br><span class="line">-rw-r--r-- 3 beluga beluga 3777 3月  31 16:21 bashrc</span><br><span class="line">lrwxrwxrwx 1 beluga beluga    6 3月  31 16:24 bashrc_slink -&gt; bashrc</span><br><span class="line">-rw-r--r-- 1 beluga beluga 3777 3月  31 16:38 bashrc_slink_1</span><br><span class="line">lrwxrwxrwx 1 beluga beluga    6 3月  31 16:38 bashrc_slink_2 -&gt; bashrc</span><br><span class="line">#也就是说，如果没有加参数，cp复制的实际是源文件而不是连接文件</span><br><span class="line"></span><br><span class="line">#将主文件夹的.bashrc及.bash_history复制到&#x2F;tmp</span><br><span class="line">$ cp ~&#x2F;.bashrc ~&#x2F;.bash_history &#x2F;tmp</span><br></pre></td></tr></table></figure>

<h3 id="移除文件或目录：rm"><a href="#移除文件或目录：rm" class="headerlink" title="移除文件或目录：rm"></a>移除文件或目录：rm</h3><p>这个命令是remove简称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">rm [-fir] 文件或目录</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-f：强制force简称，忽略不存在的文件，不会出现警告信息</span><br><span class="line">-i：互动模式，删除前会询问用户是否操作</span><br><span class="line">-r：递归删除</span><br><span class="line"></span><br><span class="line">#删除文件</span><br><span class="line">$ rm -i bashrc</span><br><span class="line">rm：是否删除普通文件 &#39;bashrc&#39;？ y</span><br><span class="line"></span><br><span class="line">#删除目录</span><br><span class="line">$ rmdir &#x2F;tmp&#x2F;etc</span><br><span class="line">rmdir: 删除 &#39;&#x2F;tmp&#x2F;etc&#39; 失败: 目录非空</span><br><span class="line">$ rm -r &#x2F;tmp&#x2F;etc</span><br><span class="line"></span><br><span class="line">#删除一个带有-开头的文件</span><br><span class="line">$ touch .&#x2F;-aaa-</span><br><span class="line">$ rm -aaa-</span><br><span class="line">rm: 不适用的选项 -- a		&lt;&#x3D;系统误判成参数，无法删除</span><br><span class="line">Try &#39;rm .&#x2F;-aaa-&#39; to remove the file &#39;-aaa-&#39;.</span><br><span class="line">Try &#39;rm --help&#39; for more information.</span><br><span class="line">$ rm .&#x2F;-aaa-</span><br></pre></td></tr></table></figure>

<h3 id="移动文件或目录：mv"><a href="#移动文件或目录：mv" class="headerlink" title="移动文件或目录：mv"></a>移动文件或目录：mv</h3><p>这个命令是move简称。这个命令也常被用来作重命名的操作</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">mv [-fiu] 源文件 目标文件</span><br><span class="line">mv [options] 源文件1 源文件2 源文件3 ... 目录</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-f：force简称，若目标文件已经存在，不会询问直接覆盖</span><br><span class="line">-i：若目标文件已经存在，询问是否覆盖</span><br><span class="line">-u：若目标文件已经存在，且source比较新，才会更新</span><br><span class="line"></span><br><span class="line">#将文件移到目录中</span><br><span class="line">$ mv bashrc mvtest</span><br><span class="line"></span><br><span class="line">#将目录重命名成mvtest2</span><br><span class="line">$ mv mvtest mvtest2</span><br><span class="line"></span><br><span class="line">#将两个文件全部移动到目录中</span><br><span class="line">$ mv bashrc1 bashrc2 mvtest2</span><br></pre></td></tr></table></figure>

<h2 id="取得路径文件名与目录名称"><a href="#取得路径文件名与目录名称" class="headerlink" title="取得路径文件名与目录名称"></a>取得路径文件名与目录名称</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#取得文件名</span><br><span class="line">$ basename &#x2F;etc&#x2F;sysconfig&#x2F;network</span><br><span class="line">network</span><br><span class="line"></span><br><span class="line">#取得目录名</span><br><span class="line">$ dirname &#x2F;etc&#x2F;sysconfig&#x2F;network</span><br><span class="line">&#x2F;etc&#x2F;sysconfig</span><br></pre></td></tr></table></figure>

<h1 id="文件内容查阅"><a href="#文件内容查阅" class="headerlink" title="文件内容查阅"></a>文件内容查阅</h1><p>如果我们要查阅一个文件时，该如何做呢？最常使用的显示文件内容的命令就是<code>cat</code>、<code>more</code>及<code>less</code>了。除此之外还有别的命令可以用来查阅文件内容</p>
<h2 id="直接查看文件内容"><a href="#直接查看文件内容" class="headerlink" title="直接查看文件内容"></a>直接查看文件内容</h2><p>直接查看文件内容可以使用<code>cat</code>、<code>tac</code>、<code>nl</code>这几个命令</p>
<h3 id="连续显示：cat"><a href="#连续显示：cat" class="headerlink" title="连续显示：cat"></a>连续显示：cat</h3><p>这个命令是concatenate简称，主要功能是将文件内容连续显示在屏幕</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">cat [-AbEnTv] 文件</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-A：相当于-vET的整合参数，可列出一些特殊字符而不是空白</span><br><span class="line">-b：列出行号，仅对非空白行做行号显示</span><br><span class="line">-E：将结尾的换行字符$显示出来</span><br><span class="line">-n：打印处行号，空白行也会有行号显示</span><br><span class="line">-T：将[Tab]以^I显示出来</span><br><span class="line">-v：列出一些看不出来的特殊字符</span><br><span class="line"></span><br><span class="line">#查看&#x2F;etc&#x2F;host.conf这个文件内容</span><br><span class="line">$ cat &#x2F;etc&#x2F;host.conf </span><br><span class="line"># The &quot;order&quot; line is only used by old versions of the C library.</span><br><span class="line">order hosts,bind</span><br><span class="line">multi on</span><br><span class="line"></span><br><span class="line">#加行号显示出来</span><br><span class="line">$ cat -n &#x2F;etc&#x2F;host.conf </span><br><span class="line">     1	# The &quot;order&quot; line is only used by old versions of the C library.</span><br><span class="line">     2	order hosts,bind</span><br><span class="line">     3	multi on</span><br><span class="line"></span><br><span class="line">#将&#x2F;etc&#x2F;hdparm.conf内容连特殊字符显示出来</span><br><span class="line">$ cat -A &#x2F;etc&#x2F;hdparm.conf </span><br><span class="line">## This is the default configuration for hdparm for Debian.  It is a$</span><br><span class="line">...</span><br><span class="line">#&#x2F;dev&#x2F;discs&#x2F;disc0&#x2F;disc &#123;$</span><br><span class="line">#^Imult_sect_io &#x3D; 16$</span><br><span class="line">#^Iwrite_cache &#x3D; off$</span><br><span class="line">#^Ispindown_time &#x3D; 240$</span><br><span class="line">#&#125;$</span><br><span class="line">$</span><br><span class="line">#可以看到[Tab]会以^I显示，换行会以$显示</span><br><span class="line">#注意在Windows下换行字符是^M$，linux下是$</span><br></pre></td></tr></table></figure>

<h3 id="反向列示：tac"><a href="#反向列示：tac" class="headerlink" title="反向列示：tac"></a>反向列示：tac</h3><p>这个命令就是把末行变成首行反向显示出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ tac &#x2F;etc&#x2F;host.conf </span><br><span class="line">multi on</span><br><span class="line">order hosts,bind</span><br><span class="line"># The &quot;order&quot; line is only used by old versions of the C library.</span><br></pre></td></tr></table></figure>

<h3 id="添加行号打印：nl"><a href="#添加行号打印：nl" class="headerlink" title="添加行号打印：nl"></a>添加行号打印：nl</h3><p><code>nl</code>可以将输出的文件内容自动加上行号，其与<code>cat -n</code>不太一样，<code>nl</code>可以将行号做特殊的显示设计，包括位数与是否自动补0等</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">nl [-bnw] 文件</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-b：指定行号显示方式，主要有两种</span><br><span class="line">	-b a：表示不论是否为空白行，都列出行号</span><br><span class="line">	-b t：如果是空白行，则空白行不列出行号(默认)</span><br><span class="line">-n：列出行号表示方法，主要有三种</span><br><span class="line">	-n ln：行号在屏幕左方显示</span><br><span class="line">	-n rn：行号在字段右方显示，且不加0</span><br><span class="line">	-n rz：行号在字段右方显示，且加0</span><br><span class="line">-w：行号字段占用的位数</span><br><span class="line"></span><br><span class="line">#用nl列出&#x2F;etc&#x2F;issue内容</span><br><span class="line">$ nl &#x2F;etc&#x2F;issue</span><br><span class="line">     1	Ubuntu 18.04.2 LTS \n \l</span><br><span class="line">       </span><br><span class="line">#注意，这个文件内容是有2行的，因为它是空白行所以没有列出行号</span><br><span class="line"></span><br><span class="line">#要让空白行也加上行号</span><br><span class="line">$ nl -b a &#x2F;etc&#x2F;issue</span><br><span class="line">     1	Ubuntu 18.04.2 LTS \n \l</span><br><span class="line">     2	</span><br><span class="line"></span><br><span class="line">#行号前面还可以自动补0，默认是6位</span><br><span class="line">$ nl -b a -n rz &#x2F;etc&#x2F;issue</span><br><span class="line">000001	Ubuntu 18.04.2 LTS \n \l</span><br><span class="line">000002	</span><br><span class="line"></span><br><span class="line">#若要改变位数，则加上-w 位数</span><br><span class="line">$ nl -b a -n rz -w 3 &#x2F;etc&#x2F;issue</span><br><span class="line">001	Ubuntu 18.04.2 LTS \n \l</span><br><span class="line">002</span><br></pre></td></tr></table></figure>

<h2 id="可翻页查看"><a href="#可翻页查看" class="headerlink" title="可翻页查看"></a>可翻页查看</h2><p>前面的那些命令都是一次性将所有内容显示到屏幕上，现在讲的就是可以一页一页翻动的命令</p>
<h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><p>如果<code>more</code>后面接的文件内容行数大于屏幕输出总行数就会出现下面的提示。在提示后面我们还可以输入一些命令或按键来实现不同的功能</p>
<ul>
<li><code>[Space]</code>：向下翻动一页 </li>
<li><code>[Enter]</code>：向下滚动一行</li>
<li><code>/字符串</code>：在这个显示页面中，查找字符串关键字</li>
<li><code>:f</code>：显示出文件名和目前显示的行数</li>
<li><code>[q]</code>：退出more，不再显示</li>
<li><code>[b]</code>或<code>[Ctrl]</code>+<code>[B]</code>：往回翻页，只对文件有用对管道无用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ more &#x2F;etc&#x2F;manpath.config </span><br><span class="line"># manpath.config</span><br><span class="line">#</span><br><span class="line"># This file is used by the man-db package to configure the man and cat paths.</span><br><span class="line">...</span><br><span class="line">--更多--(18%)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="less"><a href="#less" class="headerlink" title="less"></a>less</h3><p><code>less</code>比<code>more</code>更加有弹性，我们可以直接使用<code>[PageUp]</code>和<code>[PageDown]</code>来往前往后翻看，它也可以通过输入不同命令来实现不同功能</p>
<ul>
<li><code>[Space]</code>：向下翻动一页</li>
<li><code>[PageUp]</code>：向上翻动一页</li>
<li><code>[PageDown]</code>：向下翻动一页</li>
<li><code>/字符串</code>：向下查找字符串关键字</li>
<li><code>?字符串</code>：向上查找字符串关键字</li>
<li><code>[n]</code>：重复前一个查询</li>
<li><code>[N]</code>：反向查询前一个查询</li>
<li><code>[q]</code>：退出more，不再显示</li>
</ul>
<h2 id="数据选取"><a href="#数据选取" class="headerlink" title="数据选取"></a>数据选取</h2><p>我们可以将输出的文件内容做一个简单的选取，如取出头部（head）和尾部（tail）的内容，不过它们都是以行为单位的</p>
<h3 id="head"><a href="#head" class="headerlink" title="head"></a>head</h3><p>取出显示文件头部几行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">head [-n number] 文件</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-n：后面接数字，代表显示几行</span><br><span class="line"></span><br><span class="line">#默认显示头部10行</span><br><span class="line">$ head &#x2F;etc&#x2F;manpath.config </span><br><span class="line"># manpath.config</span><br><span class="line">#</span><br><span class="line"># This file is used by the man-db package to configure the man and cat paths.</span><br><span class="line"># It is also used to provide a manpath for those without one by examining</span><br><span class="line"># their PATH environment variable. For details see the manpath(5) man page.</span><br><span class="line">#</span><br><span class="line"># Lines beginning with &#96;#&#39; are comments and are ignored. Any combination of</span><br><span class="line"># tabs or spaces may be used as &#96;whitespace&#39; separators.</span><br><span class="line">#</span><br><span class="line"># There are three mappings allowed in this file:</span><br><span class="line"></span><br><span class="line">#显示头部3行</span><br><span class="line">$ head -n 3 &#x2F;etc&#x2F;manpath.config </span><br><span class="line"># manpath.config</span><br><span class="line">#</span><br><span class="line"># This file is used by the man-db package to configure the man and cat paths.</span><br><span class="line"></span><br><span class="line">#文件后125行的内容不显示</span><br><span class="line">$ head -n -125 &#x2F;etc&#x2F;manpath.config </span><br><span class="line"># manpath.config</span><br><span class="line">#</span><br><span class="line"># This file is used by the man-db package to configure the man and cat paths.</span><br><span class="line"># It is also used to provide a manpath for those without one by examining</span><br><span class="line"># their PATH environment variable. For details see the manpath(5) man page.</span><br><span class="line">#</span><br></pre></td></tr></table></figure>

<h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h3><p>取出显示文件尾部几行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">tail [-n number] 文件</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-n：后面接数字，代表显示几行</span><br><span class="line">-f：表示持续检测文件，文件内容改变会直接更新出来，直到按下[Ctrl]+[C]才结束</span><br><span class="line"></span><br><span class="line">#默认显示尾部10行</span><br><span class="line">$ tail &#x2F;etc&#x2F;manpath.config </span><br><span class="line"># formatted for a terminal of the given width, regardless of the width of</span><br><span class="line"># the terminal actually being used. This should generally be within the</span><br><span class="line"># range set by MINCATWIDTH and MAXCATWIDTH.</span><br><span class="line">#</span><br><span class="line">#CATWIDTH	0</span><br><span class="line">#</span><br><span class="line">#---------------------------------------------------------</span><br><span class="line"># Flags.</span><br><span class="line"># NOCACHE keeps man from creating cat pages.</span><br><span class="line">#NOCACHE</span><br><span class="line"></span><br><span class="line">#显示尾部3行</span><br><span class="line">$ tail -n 3 &#x2F;etc&#x2F;manpath.config </span><br><span class="line"># Flags.</span><br><span class="line"># NOCACHE keeps man from creating cat pages.</span><br><span class="line">#NOCACHE</span><br><span class="line"></span><br><span class="line">#只显示125行之后的内容</span><br><span class="line">$ tail -n +125 &#x2F;etc&#x2F;manpath.config </span><br><span class="line">#</span><br><span class="line">#CATWIDTH	0</span><br><span class="line">#</span><br><span class="line">#---------------------------------------------------------</span><br><span class="line"># Flags.</span><br><span class="line"># NOCACHE keeps man from creating cat pages.</span><br><span class="line">#NOCACHE</span><br></pre></td></tr></table></figure>

<h2 id="非纯文本文件：od"><a href="#非纯文本文件：od" class="headerlink" title="非纯文本文件：od"></a>非纯文本文件：od</h2><p>前面提到的都是查阅纯文本文件内容。那如果我们查阅的文件不是纯文本文件而是像二进制文件之类的，我们再用前面的命令就会出现乱码，这时我们可以使用<code>od</code>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">od [-t TYPE] 文件</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-t：后面接类型的输出，如：</span><br><span class="line">	a：默认字符输出</span><br><span class="line">	c：ASCII码输出</span><br><span class="line">	d[size]：十进制输出，每个整数占用size bytes</span><br><span class="line">	f[size]：浮点数输出，每个整数占用size bytes</span><br><span class="line">	o[size]：八进制输出，每个整数占用size bytes</span><br><span class="line">	x[size]：十六进制输出，每个整数占用size bytes</span><br><span class="line"></span><br><span class="line">#将&#x2F;usr&#x2F;bin&#x2F;passwd内容使用ASCII码输出</span><br><span class="line">$ od -t c &#x2F;usr&#x2F;bin&#x2F;passwd</span><br><span class="line">0000000 177   E   L   F 002 001 001  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">0000020 003  \0   &gt;  \0 001  \0  \0  \0 020   J  \0  \0  \0  \0  \0  \0</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">#将&#x2F;etc&#x2F;issue文件以八进制列出存储值与ASCII码对照表</span><br><span class="line">$ od -t oCc &#x2F;etc&#x2F;issue</span><br><span class="line">0000000 125 142 165 156 164 165 040 061 070 056 060 064 056 062 040 114</span><br><span class="line">          U   b   u   n   t   u       1   8   .   0   4   .   2       L</span><br><span class="line">0000020 124 123 040 134 156 040 134 154 012 012</span><br><span class="line">          T   S       \   n       \   l  \n  \n</span><br><span class="line">0000032</span><br></pre></td></tr></table></figure>

<h2 id="文件创建与时间修改：touch"><a href="#文件创建与时间修改：touch" class="headerlink" title="文件创建与时间修改：touch"></a>文件创建与时间修改：touch</h2><p>前面在介绍<code>ls</code>命令时，有提到每个文件在Linux下都记录着很多时间参数，其实是有三个主要变动时间</p>
<h3 id="内容时间：mtime"><a href="#内容时间：mtime" class="headerlink" title="内容时间：mtime"></a>内容时间：mtime</h3><p>modification time简称，当该文件的数据内容发生改变时，就会更新这个时间</p>
<h3 id="访问时间：atime"><a href="#访问时间：atime" class="headerlink" title="访问时间：atime"></a>访问时间：atime</h3><p>access time简称，当该文件的数据内容被访问读取时，就会更新这个时间</p>
<h3 id="状态时间：ctime"><a href="#状态时间：ctime" class="headerlink" title="状态时间：ctime"></a>状态时间：ctime</h3><p>status time，当该文件的权限或属性等状态改变时，就会更新这个时间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#查看一下&#x2F;etc&#x2F;manpath.config这个文件的时间</span><br><span class="line">$ ls -l &#x2F;etc&#x2F;manpath.config </span><br><span class="line">-rw-r--r-- 1 root root 5174 8月   5  2018 &#x2F;etc&#x2F;manpath.config</span><br><span class="line">#默认显示的是mtime</span><br><span class="line"></span><br><span class="line">$ ls -l --time&#x3D;atime &#x2F;etc&#x2F;manpath.config </span><br><span class="line">-rw-r--r-- 1 root root 5174 4月   1 11:14 &#x2F;etc&#x2F;manpath.config</span><br><span class="line"></span><br><span class="line">$ ls -l --time&#x3D;ctime &#x2F;etc&#x2F;manpath.config </span><br><span class="line">-rw-r--r-- 1 root root 5174 3月   4 12:00 &#x2F;etc&#x2F;manpath.config</span><br></pre></td></tr></table></figure>
<p>如果发现了一个来自未来的时间，我们该如何修改它呢，可以使用<code>touch</code>命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令:</span><br><span class="line">touch [-acdmt] 文件</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-a：仅修改访问时间atime</span><br><span class="line">-c：仅修改文件时间，若文件不存在不创建新文件</span><br><span class="line">-d：后面接欲修改的时期而不用目前时间，也可以使用--time&#x3D;日期</span><br><span class="line">-m：仅修改内容时间mtime</span><br><span class="line">-t：后面接欲修改的时期而不用目前时间，格式[YYMMDDhhmm]</span><br><span class="line"></span><br><span class="line">#新建空白文件并查看时间</span><br><span class="line">$ touch testtouch</span><br><span class="line">$ ls -l testtouch </span><br><span class="line">-rw-r--r-- 1 beluga beluga 0 4月   1 22:56 testtouch</span><br><span class="line"></span><br><span class="line">#将~&#x2F;.bashrc完全复制成为bashrc并查看时间</span><br><span class="line">$# cp -a ~&#x2F;.bashrc bashrc</span><br><span class="line">$# ll bashrc; ll --time&#x3D;atime bashrc; ll --time&#x3D;ctime bashrc</span><br><span class="line">-rw-r--r-- 1 root root 3106 4月   9  2018 bashrc		&lt;&#x3D;mtime</span><br><span class="line">-rw-r--r-- 1 root root 3106 4月   1 23:01 bashrc		&lt;&#x3D;atime</span><br><span class="line">-rw-r--r-- 1 root root 3106 4月   1 23:01 bashrc		&lt;&#x3D;ctime</span><br><span class="line"></span><br><span class="line">#修改bashrc文件，时间(atime&#x2F;mtime)改为两天前</span><br><span class="line">$# touch -d &quot;2 days ago&quot; bashrc</span><br><span class="line">$# ll bashrc;ll --time&#x3D;atime bashrc;ll --time&#x3D;ctime bashrc;</span><br><span class="line">-rw-r--r-- 1 root root 3106 3月  30 23:13 bashrc</span><br><span class="line">-rw-r--r-- 1 root root 3106 4月   1 23:13 bashrc</span><br><span class="line">-rw-r--r-- 1 root root 3106 4月   1 23:13 bashrc</span><br><span class="line"></span><br><span class="line">#修改bashrc文件，时间(atime&#x2F;mtime)改为2019&#x2F;04&#x2F;01 16:01</span><br><span class="line">$# touch -t 1904011600 bashrc</span><br><span class="line">$# ll bashrc;ll --time&#x3D;atime bashrc;ll --time&#x3D;ctime bashrc;</span><br><span class="line">-rw-r--r-- 1 root root 3106 4月   1 16:00 bashrc</span><br><span class="line">-rw-r--r-- 1 root root 3106 4月   1 16:00 bashrc</span><br><span class="line">-rw-r--r-- 1 root root 3106 4月   5 17:00 bashrc</span><br></pre></td></tr></table></figure>
<p>通过<code>touch</code>命令，我们可以轻易修改文件的内容时间mtime和访问时间atime，并且创建新空白文件。但要注意的是我们复制一个文件所有属性也没有办法复制它的状态时间ctime</p>
<h1 id="文件与目录的默认权限与隐藏权限"><a href="#文件与目录的默认权限与隐藏权限" class="headerlink" title="文件与目录的默认权限与隐藏权限"></a>文件与目录的默认权限与隐藏权限</h1><h2 id="文件默认权限：umask"><a href="#文件默认权限：umask" class="headerlink" title="文件默认权限：umask"></a>文件默认权限：umask</h2><p>umask就是用来指定目前用户在新建文件或目录时的权限。默认情况下，用户创建文件默认权限<code>-rw-rw-rw-</code>，创建目录默认权限<code>drwxrwxrwx</code>。umask分数指的是默认权限要删去的权限数值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#查看umask</span><br><span class="line">$ umask</span><br><span class="line">0002		&lt;&#x3D;第一位与隐藏权限有关，后三位与一般权限有关</span><br><span class="line">$ umask -S</span><br><span class="line">u&#x3D;rwx,g&#x3D;rwx,o&#x3D;rx</span><br><span class="line">#umask分数指的是要删去的权限数值</span><br><span class="line"></span><br><span class="line">#设置umask</span><br><span class="line">$ umask 002</span><br></pre></td></tr></table></figure>
<p>root账户的umask默认是022，一般账户的umak默认是002。关于默认umask的设置可以参考<code>/etc/bashrc</code>文件内容</p>
<h2 id="文件隐藏属性：chattr，lsattr"><a href="#文件隐藏属性：chattr，lsattr" class="headerlink" title="文件隐藏属性：chattr，lsattr"></a>文件隐藏属性：chattr，lsattr</h2><h3 id="设置文件隐藏属性：chattr"><a href="#设置文件隐藏属性：chattr" class="headerlink" title="设置文件隐藏属性：chattr"></a>设置文件隐藏属性：chattr</h3><p>注意，<code>chattr</code>命令只能在Ext2/Ext3文件系统上生效</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">chattr [+-&#x3D;][ASacdistu] 文件或目录</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">+：增加某个参数，其他原本存在参数不动</span><br><span class="line">-：删除某个参数，其他原本存在参数不动</span><br><span class="line">&#x3D;：仅有后面接的参数</span><br><span class="line"></span><br><span class="line">A：加上A参数时，若存取此文件时，它的存取时间atime将不会被修改，可避免I&#x2F;O较慢的机器过度的存取磁盘</span><br><span class="line">S：一般文件是非同步写入硬盘，如果加上S参数时，当你进行任何修改，该更动都会写入磁盘中</span><br><span class="line">a：加上a参数时，这个文件将只能增加资料，而不能删除也不能修改数据，只有root才能设定这参数</span><br><span class="line">c：这个参数设定之后，将会自动的将文件压缩，读取时自动解压，但是在储存的时候，将会先进行压缩后再储存</span><br><span class="line">d：当dump程序被执行的时候，设定d参数将可使该文件(或目录)不会被dump备份</span><br><span class="line">i：让文件不能被删除、改名、设置连接也无法写入或添加数据，只有root能设定此参数</span><br><span class="line">s：当设定了s参数时，如果这个文件被删除，他将会被完全的移除出硬盘空间，所以如果误删了，无法救回来了</span><br><span class="line">u：与s相反，当使用u设定时，如果该档案被删除了，则数据内容其实还存在硬盘中</span><br><span class="line"></span><br><span class="line">#到&#x2F;tmp创建文件，加入i参数，尝试删除</span><br><span class="line">$ touch attrtest</span><br><span class="line">$ chattr +i attrtest</span><br><span class="line">$ rm attrtest</span><br><span class="line">rm: 无法删除&#39;attrtest&#39;: 不允许的操作</span><br><span class="line"></span><br><span class="line">#取消i参数</span><br><span class="line">$ chattr -i attrtest</span><br></pre></td></tr></table></figure>

<h3 id="查看文件隐藏属性"><a href="#查看文件隐藏属性" class="headerlink" title="查看文件隐藏属性"></a>查看文件隐藏属性</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">lsattr [-adR] 文件或目录</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-a：将隐藏文件的属性也显示出来</span><br><span class="line">-d：如果接的是目录，仅列出目录本身属性而非目录内的文件名</span><br><span class="line">-R：连同子目录也一并显示出来</span><br><span class="line"></span><br><span class="line">#显示文件隐藏属性</span><br><span class="line">$ chattr +aij attrtest</span><br><span class="line">$ lsattr attrtest</span><br><span class="line">----ia----j---e--- attrtest</span><br></pre></td></tr></table></figure>

<h2 id="文件特殊权限：SUID，SGID，SBIT"><a href="#文件特殊权限：SUID，SGID，SBIT" class="headerlink" title="文件特殊权限：SUID，SGID，SBIT"></a>文件特殊权限：SUID，SGID，SBIT</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ls -ld &#x2F;tmp;ls -l &#x2F;usr&#x2F;bin&#x2F;passwd</span><br><span class="line">drwxrwxrwt 19 root root 4096 4月   5 18:29 &#x2F;tmp</span><br><span class="line">-rwsr-xr-x 1 root root 59640 1月  25  2018 &#x2F;usr&#x2F;bin&#x2F;passwd</span><br></pre></td></tr></table></figure>
<p>查看上述两个目录的权限，发现除了r、w、x权限之外还出现了s、t权限。原来这两个权限是与系统账号及系统进程相关的权限</p>
<h3 id="SetUID"><a href="#SetUID" class="headerlink" title="SetUID"></a>SetUID</h3><p>-P184-（挖坑</p>
<h3 id="SetGID"><a href="#SetGID" class="headerlink" title="SetGID"></a>SetGID</h3><p>-P185-（挖坑</p>
<h3 id="StickyBit"><a href="#StickyBit" class="headerlink" title="StickyBit"></a>StickyBit</h3><p>-P186-（挖坑</p>
<h2 id="查看文件类型：file"><a href="#查看文件类型：file" class="headerlink" title="查看文件类型：file"></a>查看文件类型：file</h2><p>如果你想要知道某个文件的基本数据，例如是属于ASCII或data文件，或者是binary，且其中有没有使用到动态函数库等信息，就可以使用<code>file</code>命令查看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ file ~&#x2F;.bashrc</span><br><span class="line">&#x2F;home&#x2F;beluga&#x2F;.bashrc: ASCII text		#告诉我们这是个ASCII文件</span><br></pre></td></tr></table></figure>

<h1 id="命令与文件的查询"><a href="#命令与文件的查询" class="headerlink" title="命令与文件的查询"></a>命令与文件的查询</h1><p>我们经常需要知道某个文件的存储位置，这样才能对该文件进行一些修改维护等操作</p>
<h2 id="脚本文件名的查询"><a href="#脚本文件名的查询" class="headerlink" title="脚本文件名的查询"></a>脚本文件名的查询</h2><p>我们知道在终端机模式当中，连续按两次<code>[Tab]</code>就能够知道使用者有多少命令可以执行。那你知不知道这些命令完整文件名放在哪？可以通过<code>which</code>或<code>type</code>查询</p>
<h3 id="寻找执行文件：which"><a href="#寻找执行文件：which" class="headerlink" title="寻找执行文件：which"></a>寻找执行文件：which</h3><p>这个命令是根据PATH这个环境变量所规范的路径去查询执行文件的文件名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">which [-a] command</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-a：将所有由PATH目录中可以找到的命令列出，而不只第一个被找到的命令名称</span><br></pre></td></tr></table></figure>

<h2 id="文件名的查找"><a href="#文件名的查找" class="headerlink" title="文件名的查找"></a>文件名的查找</h2><p>Linux 中也有查找文件命令。通常<code>find</code>不是很常用，因为搜索速度很慢。一般先使用<code>whereis</code>或<code>locate</code>来查找，实在找不到再使用<code>find</code>。因为<code>whereis</code>和<code>locate</code>是利用数据库来查找数据的，并没有查询硬盘</p>
<h3 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令</span><br><span class="line">whereis [-bmsu] 文件或目录</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-l：可以列出whereis会去查询的几个主要目录</span><br><span class="line">-b：只找二进制(binary)格式的</span><br><span class="line">-m：只找在说明文件(manual)路径下的档案</span><br><span class="line">-s：只找源文件(source)</span><br><span class="line">-u：查找不在上述三个项目当中的其他特殊文件</span><br></pre></td></tr></table></figure>

<h3 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h3><p>这个命令使用更加简单，直接在后面输入文件的关键字（部分文件名）就可以得到结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">locate [-ir] Keywords</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-i：忽略大小写的差异</span><br><span class="line">-c：不输出文件名，仅计算找到的文件数量</span><br><span class="line">-l：仅输出几行的意思，例如输出5行则是-l 5</span><br><span class="line">-r：后面可接正则表达式的显示方式</span><br></pre></td></tr></table></figure>

<p>这个命令使用时有个限制，因为它是直接查找数据库的，所以有时数据库还来不及更新你就找不到某个文件。而更新数据库可以使用<code>updatedb</code>命令</p>
<h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">find [PATH] [option] [action] </span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">与时间有关的选项：-atime,-ctime,-mtime</span><br><span class="line">	-mtime n：意义为在n天之前的一天之内被更改过内容的文件</span><br><span class="line">	-mtime +n：列出在n天之前(不含n天本身)被更改过内容的文件名</span><br><span class="line">	-mtime -n：列出在n天之内(含n天本身)被更改过内容的文件名</span><br><span class="line">	-newer file：file为一个存在的文件，列出比file还要新的文件名</span><br><span class="line"></span><br><span class="line">与使用者或群组名称有关的参数</span><br><span class="line">	-uid n：n是用户的帐号ID，即UID</span><br><span class="line">	-gid n：n是用户组名的ID，即GID</span><br><span class="line">	-user name：name为用户账户名,如beluga</span><br><span class="line">	-group name：name为用户组名，如users</span><br><span class="line">	-nouser：查找文件所有者不在&#x2F;etc&#x2F;passwd的文件</span><br><span class="line">	-nogroup：查找文件所有用户组不存在于&#x2F;etc&#x2F;group的文件</span><br><span class="line">	</span><br><span class="line">与档案权限及名称有关的参数</span><br><span class="line">	-name filename：查找文件名为filename的文件</span><br><span class="line">	-size [+-]SIZE：查找比SIZE要大(+)或小(-)的文件</span><br><span class="line">		c：代表byte</span><br><span class="line">		k：代表1024bytes</span><br><span class="line">	-type TYPE：查找文件类型为TYPE的文件</span><br><span class="line">		一般文件(f)</span><br><span class="line">		设备文件(b,c)</span><br><span class="line">		目录(d)</span><br><span class="line">		连接文件(l)</span><br><span class="line">		socket(s)</span><br><span class="line">		FIFO(p)等</span><br><span class="line">	-perm mode：查找权限等于mode的文件</span><br><span class="line">		mode类似chmod的属性值，如-rwsr-xr-x属性为4755</span><br><span class="line">	-perm -mode：查找文件权限全部包括mode权限的文件</span><br><span class="line">	-perm +mode：查找文件权限包含任一mode权限的文件</span><br><span class="line"></span><br><span class="line">其他可进行的操作</span><br><span class="line">	-exec command：-exec后面可接其他命令来处理搜寻到的结果</span><br><span class="line">	-print：将结果打印到屏幕，这个操作是默认操作</span><br><span class="line"></span><br><span class="line">#将系统24小时内改动过内容(mtime)的文件列出 </span><br><span class="line">$ find &#x2F; -mtime 0 </span><br><span class="line">#0代表目前的时间，表示从现在开始到24小时前</span><br><span class="line"></span><br><span class="line">#如果是三天前的24小时内</span><br><span class="line">$ find &#x2F; -mtime 3</span><br><span class="line"></span><br><span class="line">#查询&#x2F;etc的文件，如果日期比&#x2F;etc&#x2F;passwd新就列出 </span><br><span class="line">$ find &#x2F;etc -newer &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>

<p><code>find</code>时间参数意义</p>
<img src="/BJ190405/find_time.gif" class="">

<br/>

<hr>
<h1 id="编辑日志"><a href="#编辑日志" class="headerlink" title="编辑日志"></a>编辑日志</h1><p><strong>20/03/19</strong><br>1.&ensp;修改文章部分用词<br>2.&ensp;更改文章代码样式<br>3.&ensp;调整文章排版<br>4.&ensp;修复文章超链接失效问题</p>
<p><strong>20/01/21</strong><br>1.&ensp;修改文章名称为【Linux：文件与目录管理】<br>2.&ensp;更改文章编码位置</p>
<p><strong>19/05/19</strong><br>1.&ensp;完善文章前言部分</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux：文件权限与目录配置</title>
    <url>/BJ190324/</url>
    <content><![CDATA[<p><em>#BJ190324</em><br>Linux最优秀的地方，就在与它的多用户、多任务环境。而为了让各个用户具有较保密的文件数据，因此文件权限管理就很重要。另外，在Linux底下这么多的目录/文件都分别代表什么意义呢？<br>-P138-</p>
<a id="more"></a>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<h1 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h1><p>Linux将文件可存取访问的身份分为3个类别，分别是<code>owner</code>、<code>group</code>、<code>others</code>。各个身份各有<code>read</code>、<code>write</code>、<code>execute</code>等权限</p>
<h1 id="文件权限概念"><a href="#文件权限概念" class="headerlink" title="文件权限概念"></a>文件权限概念</h1><h2 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h2><p>查看属性的命令<code>ls</code>（list简称），参数<code>-al</code>表示列出所有文件详细的权限与属性（包括隐藏文件）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ls -al</span><br><span class="line">总用量 100</span><br><span class="line"># 【1】   【2】 【3】  【4】 【5】     【6】      【7】</span><br><span class="line">drwx------ 18 beluga beluga 4096 3月  10 15:20 .cache</span><br><span class="line">drwx------ 15 beluga beluga 4096 3月  10 14:53 .config</span><br><span class="line">-rw-r--r--  1 beluga beluga    5 3月  10 15:18 test.txt</span><br><span class="line">drwxr-xr-x  2 beluga beluga 4096 3月   4 12:24 公共的</span><br><span class="line">drwxr-xr-x  2 beluga beluga 4096 3月   4 12:24 模板</span><br></pre></td></tr></table></figure>

<p><strong>【1】该文件的类型与权限</strong><br>其中共有10个字符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-rw-r--r--</span><br><span class="line">#第一个字符代表这个文件的类型</span><br><span class="line">[d]：目录</span><br><span class="line">[-]：文件</span><br><span class="line">[l]：连接文件（linkfile）</span><br><span class="line">[b]：设备文件里边可供储存的接口设备</span><br><span class="line">[c]：设备文件里边串行端口设备</span><br><span class="line">#后面字符以3个为一组，均为rwx组合</span><br><span class="line">#其中第一组为文件所有者权限，第二组为同用户组权限，第三组为其他人权限（非本用户组权限）</span><br><span class="line">[r]：可读，其中[-]为无此权限</span><br><span class="line">[w]：可写，其中[-]为无此权限</span><br><span class="line">[x]：可执行，其中[-]为无此权限</span><br></pre></td></tr></table></figure>

<p><strong>【2】有多少文件名连接到此节点（i-code）</strong><br>每个文件都会将它的权限和属性记录到文件系统的i-code中，不过我们使用的目录树是使用用户名来记录，因此每个文件名就会连接到一个i-code</p>
<p><strong>【3】该文件的所有者</strong><br>如上图所有文件的所有者均为buluga账号</p>
<p><strong>【4】该文件所属用户组</strong><br>在Linux系统下，一个账号会附属与一个或多个用户组</p>
<p><strong>【5】该文件的容量大小，默认单位为B</strong></p>
<p><strong>【6】该文件的创建日期和修改日期</strong><br>这列内容为日期（月/日）及时间。若文件被修改的时间太久则时间部分仅会显示年份。如果想显示完整时间格式，可以使用如下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">ls -al --full-time</span><br></pre></td></tr></table></figure>

<p><strong>【7】该文件的文件名</strong><br>如果是以<code>.</code>开头的文件名则表示隐藏文件</p>
<h2 id="修改文件属性与权限"><a href="#修改文件属性与权限" class="headerlink" title="修改文件属性与权限"></a>修改文件属性与权限</h2><h3 id="改变用户组：chgrp"><a href="#改变用户组：chgrp" class="headerlink" title="改变用户组：chgrp"></a>改变用户组：chgrp</h3><p>这个命令是change group简称。要注意的是改变的组名要在<code>/etc/group</code>文件内存在才行，否则会报错<br>假设你以root身份登录系统，你的文件内有个叫users的用户组，但没有叫testing的用户组，此时我们去对一个文件分别改变为users和testing会发生什么呢</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">chgrp [-R] 用户组 文件名</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-R：进行递归的持续更改，即连同子目录下的所有文件、目录都更新成这个用户组</span><br><span class="line"></span><br><span class="line">#更改文件用户组</span><br><span class="line">$ chgrp users test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rw-r--r--  1 beluga users     5 3月  10 15:18 test.txt</span><br><span class="line"></span><br><span class="line">$ chgrp testing test.txt</span><br><span class="line">chgrp: 无效的组：&quot;testing&quot;</span><br></pre></td></tr></table></figure>

<h3 id="改变所有者：chown"><a href="#改变所有者：chown" class="headerlink" title="改变所有者：chown"></a>改变所有者：chown</h3><p>这个命令是change owner简称。与<code>chgrp</code>类似的是用户必须是已经存在于系统中的账号，也就是要在<code>/etc/passwd</code>这个文件中有记录的才能更改<br>它的用途还挺多的，它还可以顺便直接修改用户组的名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">chown [-R] 账号 文件名</span><br><span class="line">chown [-R] 账号:用户组 文件名</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">-R：进行递归的持续更改，即连同子目录下的所有文件、目录都更新成这个用户组</span><br><span class="line"></span><br><span class="line">#更改文件所有者</span><br><span class="line">$ chown bin test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rw-r--r--  1 bin    users     5 3月  10 15:18 test.txt</span><br><span class="line"></span><br><span class="line">#更改文件所有者和用户组</span><br><span class="line">$ chown root:root test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rw-r--r--  1 root   root      5 3月  10 15:18 test.txt</span><br></pre></td></tr></table></figure>

<p>注：</p>
<ol>
<li>上方同时更改文件所有者和用户组时使用<code>:</code>分隔，事实上使用<code>.</code>也可以。但如果你的用户名中本来就包含<code>.</code>时，这会造成系统误判。所以一般建议使用<code>:</code>分隔</li>
<li>此外chown也可以单纯只修改用户组，使用方法参照下方<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ chown :beluga test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rwxrwxr-x  1 root   beluga    5 3月  10 15:18 test.txt</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="改变权限：chmod"><a href="#改变权限：chmod" class="headerlink" title="改变权限：chmod"></a>改变权限：chmod</h3><p><strong>数字改变权限</strong><br>文件的权限字符为<code>-rwxrwxrwx</code>，后9个权限三个一组<br>其中我们可以使用数字代表各个权限：<br>r：4，w：2，x：1<br>每种身份各自三个权限分数是需要累加的<br>例如当权限为<code>-rwxrwx---</code>时，其权限分数则为：</p>
<ul>
<li><code>owner</code>=4+2+1=7</li>
<li><code>group</code>=4+2+1=7</li>
<li><code>others</code>=0+0+0=0<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">chmod [-R] 权限分数 文件</span><br><span class="line"></span><br><span class="line">#数字更改文件权限</span><br><span class="line">$ chmod 777 test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rwxrwxrwx  1 beluga beluga    5 3月  10 15:18 test.txt</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><strong>符号改变权限</strong><br>使用这种方法，<code>owner（user）</code>、<code>group</code>、<code>others</code>三种身份通过<code>u</code>、<code>g</code>、<code>o</code>表示，此外<code>a</code>表示所有身份。而<code>+</code>表示添加权限，<code>-</code>表示删去权限，<code>=</code>表示设置权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">命令：</span><br><span class="line">chmod u&#x2F;g&#x2F;o&#x2F;a +&#x2F;-&#x2F;&#x3D; r&#x2F;w&#x2F;x 文件</span><br><span class="line"></span><br><span class="line">#符号更改文件权限</span><br><span class="line">$ chmod u&#x3D;rwx,go&#x3D;rx test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rwxr-xr-x  1 beluga beluga    5 3月  10 15:18 test.txt</span><br><span class="line"></span><br><span class="line">$ ls -al</span><br><span class="line">-rwxr-xr-x  1 beluga beluga    5 3月  10 15:18 test.txt</span><br><span class="line">$ chmod g+w test.txt</span><br><span class="line">$ ls -al</span><br><span class="line">-rwxrwxr-x  1 beluga beluga    5 3月  10 15:18 test.txt</span><br></pre></td></tr></table></figure>

<h2 id="文件和目录的权限意义"><a href="#文件和目录的权限意义" class="headerlink" title="文件和目录的权限意义"></a>文件和目录的权限意义</h2><h3 id="权限对于文件"><a href="#权限对于文件" class="headerlink" title="权限对于文件"></a>权限对于文件</h3><p>文件是指实际含有数据的地方，一般包括文本文件、数据库内容文件、二进制可执行文件等<br>对于文件来说，其权限主要都是针对文件的内容而言的</p>
<ul>
<li>r（Read）：可读取文件的实际内容</li>
<li>w（Write）：可以编辑、新增或修改文件的内容（不含删除该文件）</li>
<li>x（eXecute）：该文件可以被系统执行</li>
</ul>
<h3 id="权限对于目录"><a href="#权限对于目录" class="headerlink" title="权限对于目录"></a>权限对于目录</h3><p>目录的主要内容是记录文件名列表</p>
<ul>
<li>r（read contents in directory）：表示具有读取目录结构列表的权限，你可以查询该目录下的文件名数据，利用<code>ls</code>命令去显示</li>
<li>w（modify contents in directory）：表示具有更改该目录结构列表的权限，包括新建新的文件与目录、删除文件与目录（不论该文件权限为何）、给文件和目录重命名、转移该目录下的文件和目录的位置</li>
<li>x（access directory）：表示该目录可以成为工作目录，变换工作目录命令是<code>cd</code></li>
</ul>
<h2 id="文件种类与拓展名"><a href="#文件种类与拓展名" class="headerlink" title="文件种类与拓展名"></a>文件种类与拓展名</h2><h3 id="文件种类"><a href="#文件种类" class="headerlink" title="文件种类"></a>文件种类</h3><p>我们在前面提到利用<code>ls</code>命令可以查看文件属性，在属性的最开头10个字符中，第一个指的就是文件的类型</p>
<ul>
<li><code>[-]</code>普通文件（regular file）：就是我们一般访问的文件。依据文件内容，大致可以分为：<ol>
<li>纯文本文件（ASCII）：这是Linux系统最常见的一种文件类型，其内容我们可以直接读懂，如数字字母。我们可以执行<code>cat ~/.bashrc</code>命令就可以看到该文件内容</li>
<li>二进制文件（binary）：Linux当中的可执行文件（scripts、文字批处理文件不算）就是这种格式</li>
<li>数据格式文件（data）：某些程序在运行时会读取某些特定格式的文件，这些文件就称为数据文件</li>
</ol>
</li>
<li><code>[d]</code>目录（directory）</li>
<li><code>[l]</code>连接文件（link）：就类似Windows系统下的快捷方式</li>
<li><code>[b/c]</code>设备文件（device）：与系统外设及存储相关的一些文件，通常在/dev目录下，一般分为两种：<ol>
<li><code>[b]</code>块（block）设备文件：就是一些存储数据，以提供系统随机访问的接口设备，如硬盘等</li>
<li><code>[c]</code>字符 （character）设备文件：就是一些串行端口的接口设备，如鼠标键盘等</li>
</ol>
</li>
<li><code>[s]</code>套接字（sockets）：被称为数据接口文件，这种类型的文件一般用在网络上的数据连接。通常在/var/run这个目录下就可以看到这种文件类型</li>
<li><code>[p]</code>管道（FIFO，pipe）：FIFO也是一种特殊的文件类型，主要目的是在解决多个程序同时访问同一个文件所造成的错误问题。FIFO是first-in-first-out的缩写</li>
</ul>
<h3 id="文件拓展名"><a href="#文件拓展名" class="headerlink" title="文件拓展名"></a>文件拓展名</h3><p>Linux的文件是没有所谓的拓展名的。一个Linux文件能不能被执行，与它的10个字符属性有关，与文件名无关。虽然如此，但我们仍然希望可以由拓展名来判断这个文件是什么东西，所以我们通常还是会以适当的拓展名来表示文件类型：</p>
<ul>
<li><code>*.sh</code>：脚本或批处理文件（scripts），因为批处理文件是为使用shell写成的</li>
<li><code>*Z/*.tar/*.zip/*.tgz</code>：压缩文件</li>
<li><code>*.php/*.html</code>：网页相关文件</li>
</ul>
<h3 id="文件名限制"><a href="#文件名限制" class="headerlink" title="文件名限制"></a>文件名限制</h3><p>在Linux中，使用默认Ext2、Ext3文件系统时，针对文件名长度限制为：</p>
<ol>
<li>单一文件或目录的最大容许文件名为255个字符</li>
<li>包含完整路径名称及目录（/）的完整文件名为4096个字符</li>
</ol>
<p>除此以外，由于Linux在文字界面下的一些命令操作关系，一般文件名避免出现一些特殊字符，如下列这些：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*?&gt;&lt;;&amp;![]|\&#39;&quot;()&#123;&#125;</span><br></pre></td></tr></table></figure>
<p>因为这些符号在命令行界面下是有特殊含义的<br>文件名开头为小数点<code>.</code>时，代表这个文件是隐藏文件</p>
<h1 id="目录配置"><a href="#目录配置" class="headerlink" title="目录配置"></a>目录配置</h1><p>为什么每套Linux distribution版本的配置文件、执行文件、每个目录放置的内容其实都差不多？这是因为是有一套标准依据的</p>
<h2 id="目录配置标准：FHS"><a href="#目录配置标准：FHS" class="headerlink" title="目录配置标准：FHS"></a>目录配置标准：FHS</h2><p>根据FHS官方文件指出，其目的主要是希望用户可以了解已安装软件通常放置在哪个目录下，所以其希望独立的软件开发商、操作系统开发者以及想要维护系统的用户，都能够遵循FHS的标准<br>FHS是一直根据过去的经验在持续改版的，其依托文件系统使用的频繁与否与是否允许用户随意改动，而将目录定义成为四种交互作用的形态</p>
<table>
<thead>
<tr>
<th></th>
<th>可分享的（shareable）</th>
<th>不可分享的（unshareable）</th>
</tr>
</thead>
<tbody><tr>
<td>不变的（static）</td>
<td>/usr（软件放置处）</td>
<td>/etc（配置文件）</td>
</tr>
<tr>
<td></td>
<td>/opt（第三方软件）</td>
<td>/boot（开机与内核文件）</td>
</tr>
<tr>
<td>可变动的（variable）</td>
<td>/var/mail（用户邮件信箱）</td>
<td>/var/run（程序相关）</td>
</tr>
<tr>
<td></td>
<td>/var/spool/news（新闻组）</td>
<td>/var/lock（程序相关）</td>
</tr>
</tbody></table>
<ul>
<li>可分享的：可以分享给其他系统挂载使用的目录</li>
<li>不可分享的：自己机器上运行的设备文件或者与程序有关的socket文件等</li>
<li>不变的：有些数据不经常变动，跟随着distribution而不变动。如函数库、文件说明文件、系统管理员所管理的主机服务配置文件等</li>
<li>可变动的：经常改变的数据。如登录文件、新闻组等</li>
</ul>
<p>事实上，FHS针对目录树架构仅定义出三层目录下面应该放置什么数据</p>
<ul>
<li>/（root，根目录）：与开机系统有关</li>
<li>/usr（UNIX software resource）：与软件安装执行有关</li>
<li>/var（variable）：与系统运作过程有关</li>
</ul>
<h3 id="的意义和内容"><a href="#的意义和内容" class="headerlink" title="/的意义和内容"></a>/的意义和内容</h3><p>-P153-（挖坑</p>
<h3 id="usr的意义和内容"><a href="#usr的意义和内容" class="headerlink" title="/usr的意义和内容"></a>/usr的意义和内容</h3><p>-P155-（挖坑</p>
<h3 id="var的意义和内容"><a href="#var的意义和内容" class="headerlink" title="/var的意义和内容"></a>/var的意义和内容</h3><p>-P155-（挖坑</p>
<h2 id="目录树（directory-tree）"><a href="#目录树（directory-tree）" class="headerlink" title="目录树（directory tree）"></a>目录树（directory tree）</h2><p>-P156-（挖坑</p>
<h2 id="绝对路径与相对路径"><a href="#绝对路径与相对路径" class="headerlink" title="绝对路径与相对路径"></a>绝对路径与相对路径</h2><p>绝对路径：由根目录（/）开始写起的文件名或目录名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;home&#x2F;dmtsai&#x2F;.bashrc</span><br></pre></td></tr></table></figure>
<p>相对路径：相对与目前路径的文件名写法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;home&#x2F;dmtsai或..&#x2F;..&#x2F;home&#x2F;dmtsai</span><br></pre></td></tr></table></figure>
<p>总之，开头不是根目录的就属于相对路径。特别注意的是相对路径是以你现在所处的位置来表示。举例来说，你目前出去/home这个目录下，如果想要进入/var/log这个目录时，两种写法的区别</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd &#x2F;var&#x2F;log           #绝对路径</span><br><span class="line"></span><br><span class="line">#因为你在&#x2F;home目录下，所以你要先回到上一层，再进入&#x2F;var目录</span><br><span class="line">$ cd ..&#x2F;var&#x2F;log         #相对路径</span><br></pre></td></tr></table></figure>
<p>注意两个特殊目录：<br><code>.</code>：代表当前目录，也可以使用<code>./</code>表示<br><code>..</code>：代表上一层目录，也可以使用<code>../</code>表示</p>
<h2 id="系统信息的查看"><a href="#系统信息的查看" class="headerlink" title="系统信息的查看"></a>系统信息的查看</h2><p>某些时候你可能想知道你的distribution使用的是哪个Linux标准（Linux Standard Base）。那该如何查看这些基本信息呢，可以用下面的命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ uname -r</span><br><span class="line">4.18.0-16-generic</span><br><span class="line">$ lsb_release -a</span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID:	Ubuntu</span><br><span class="line">Description:	Ubuntu 18.04.2 LTS</span><br><span class="line">Release:	18.04</span><br><span class="line">Codename:	bionic</span><br></pre></td></tr></table></figure>

<br/>

<hr>
<h1 id="编辑日志"><a href="#编辑日志" class="headerlink" title="编辑日志"></a>编辑日志</h1><p><strong>20/03/19</strong><br>1.&ensp;更改文章代码样式<br>2.&ensp;调整文章排版<br>3.&ensp;优化文章小代码滥用问题</p>
<p><strong>20/03/18</strong><br>1.&ensp;修改文章用词与符号<br>2.&ensp;更改文章代码样式<br>3.&ensp;修复文章章节错误问题</p>
<p><strong>20/01/21</strong><br>1.&ensp;修改文章名称为【Linux：文件权限与目录配置】<br>2.&ensp;更改文章编码位置</p>
<p><strong>19/07/05</strong><br>1.&ensp;修复文章代码显示错位问题</p>
<p><strong>19/05/19</strong><br>1.&ensp;完善文章前言部分</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>「Revolution OS」观后感</title>
    <url>/SB190315/</url>
    <content><![CDATA[<p><em>#SB190315</em><br>刚知道这部电影的时候，我一下子就被吸引到了，原因是标题让我一下子联想到了18年5月锤子科技的发布会。其发布的坚果R1中的R也是取自「Revolution」，更重要是在发布会上还推出了据老罗所说的人类下一代操作设备——TNT工作站，与之配套的是一个通过手势加语音来操控的全新系统。但是在它推出时也因为完成度过低而引发了许多争议，这几天好像已经推出了Smartisan OS 6.6.6版本，现在谈论老罗的这个系统具不具有革命性还为时尚早。但在计算机操作系统发展史上却发生过一场革命，也正是这部影片所围绕的对象「Linux」。</p>
<a id="more"></a>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<p>确切的说，最初的Linux并不能谈得上是个操作系统，其仅仅指的是一个操作系统的内核（Kernel）。要知道，操作系统除了系统内核之外还应该包括有系统的调用接口。不过，在现如今大多数的人都已经习惯用Linux系统来统称所有基于Linux内核，并且使用GNU项目各种工具的操作系统。</p>
<p>其实早在看这部影片之前，通过道听途说，我便对Linux这个系统的由来有一定的了解，其实也谈不上了解，就是知道一些关于Linux的事情。这部影片让我能够更全面地了解Linux诞生在怎样一个社会环境，又为什么会诞生。</p>
<p>在那个时候，大家用的都是微软的操作系统，而微软对开源非常不感冒。还在自己家的Windows系统中捆绑了Internet Explorer浏览器，这直接把另一个浏览器厂商——Netscape（网景）给打到角落里面去了。对于这种垄断的行为，引发了许多开发者的不满，担心微软借助其市场地位随意篡改网站所依赖的HTTP和HTML协议，从而排挤掉自己的竞争对手。而这一行为也为后面网景公司成为第一家参与开源的大公司埋下伏笔。</p>
<p>正是当时市面上的系统都是不自由不开放的，当时还在MIT实验室工作的Richard Matthew Stallman（RMS）也因为自己实验室的许多黑客都进入专利软件公司感到十分气愤和无奈。于是最终他决定自己创造一套自由免费，兼容于Unix系统的操作系统，取名叫「GNU」。这个名字非常有意思，GNU’s Not Unix！GNU不是Unix系统，而GNU是什么呢？GNU不是Unix系统，这是个循环。不得不说，程序员的脑回路和正常人都不太一样hhh。但由于当时人手并不多，而开发一个操作系统又是一个大工程。所以他们就想出了一个主意，不如先从系统上面的应用程序入手，于是许多优秀的自由软件诞生了，其中还包括了很有名的GCC（GNU C Compiler）这是一个C语言的编译器。在这期间，也有许多人加入了他的队伍。而随着时间的推进，开发的软件也越来越多，为了防止自己的软件经过别人的修改就沦为了专利软件。这就有了后来的「GPL通用公共许可证」，这个许可证的大意就是在这个许可证保护下的自由软件无论如何修改再发布，它也必须还是自由软件。当然不论软件再多，一个操作系统最重要的还是它的核心，他们最终的目标还是开发出自己的GNU系统核心，在他们开发内核的过程中，突然发现有个叫Linus Benedict Torvalds的人开发了一个核心，而且进度比他们还快，不仅如此它运行性能和稳定性也都还不错。这个核心就是Linux内核。</p>
<p>原来，在Helsinki大学的Torvalds因为学业和兴趣接触到了Unix系统，当时整个大学就一部Unix系统主机，仅提供16个终端机。喜欢折腾的他不禁想到“要不我也搞出来一部Unix来玩玩？”不久，他找到了一个叫Minix的类Unix的系统。这个系统是一个叫Andrew Stuart Tanenbaum的教授为了教学需要把Unix的内核给改写出来的操作系统，至于为什么要改写呢？那当然是为了避免Unix的版权纠纷。Torvalds拿到这个系统之后，发现这个教师为了教学上面还附有开发的源码，他在上面学习到许多内核开发的设计概念，但是他也发现一个问题，虽然这个系统很棒，但是教授并不愿意进行功能加强，导致心里就总感觉不得劲。“既然如此那怎么不也自己改写一个系统呢？”他心想，说干就干，他在网上搜索资料，知道了GUN项目借助项目提供的bash工作环境以及GCC编译器等开发工具，捣鼓出了一个系统内核，然后把这个内核放到了网上供大家下载来收集问题反馈。那时候的他就是为了好玩，也没想干个啥大事。就这样，这个内核就被RMS发现了，而且还由于性能更好的原因被用作GNU的系统内核。</p>
<p>不得不说这真是太巧合了，假如Torvalds不喜欢折腾，之前也没有因为兴趣想要搞出一个类Unix系统，也就不会开发出Linux内核。所以现在你经常可以听到：「兴趣是你最好的老师」。其实我觉得后面还应该增加一句「如果你愿意真正付诸于行动，坚持下去」。我们有时候在做一些事情时，我们往往因为不知道我做这个事情以后能有什么用便放弃了，但是以后的事情谁又说得准呢？不如就坚持下去，努力完成它。</p>
<blockquote>
<p>当你不知道将来干啥的时候就专注于眼前的事，努力完成它。说不定哪天有需要用到的地方。</p>
</blockquote>
<p>2019/03/15</p>
<br/>

<hr>
<h1 id="编辑日志"><a href="#编辑日志" class="headerlink" title="编辑日志"></a>编辑日志</h1><p><strong>20/01/21</strong><br>1.&ensp;更改文章编码位置</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware：虚拟机安装Ubuntu指南</title>
    <url>/JC190304/</url>
    <content><![CDATA[<p><em>#JC190304</em><br>最近在学基于ARM Cortex-A8和Linux的嵌入式系统设计。也就需要一个能随时捣鼓的Linux系统，加上周围有些人并不知道在一个系统上可以利用虚拟机去运行另一个系统。今天我就把这个方法和整个安装过程分享给大家，这次我使用的虚拟机是VMware公司的产品，其他的虚拟机的操作步骤也是大同小异。希望能对你有所帮助。</p>
<a id="more"></a>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol>
<li>VMware Workstation Pro<br><a href="https://www.vmware.com" target="_blank" rel="noopener">软件官网</a><br><a href="https://www.vmware.com/cn/products/workstation-pro.html" target="_blank" rel="noopener">下载地址</a></li>
<li>Ubuntu 安装镜像<br><a href="https://www.ubuntu.com" target="_blank" rel="noopener">软件官网</a><br><a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="noopener">下载地址</a></li>
</ol>
<h1 id="VMware虚拟机安装"><a href="#VMware虚拟机安装" class="headerlink" title="VMware虚拟机安装"></a>VMware虚拟机安装</h1><p>VMware虚拟机下载完成之后安装，调好安装目录，一路下一步即可。安装过程中会提示让你输入产品密钥<br>这里为了方便，丢个 VMware Workstation 15 Pro 的激活密钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">YG5H2-ANZ0H-M8ERY-TXZZZ-YKRV8</span><br></pre></td></tr></table></figure>

<blockquote>
<p><em>注：强烈建议支持正版，但用于学习研究，也可先试用一段时间日后再购入</em></p>
</blockquote>
<h1 id="在VMware安装Ubuntu"><a href="#在VMware安装Ubuntu" class="headerlink" title="在VMware安装Ubuntu"></a>在VMware安装Ubuntu</h1><ol>
<li><p>用管理员身份运行VMware，创建新的虚拟机</p>
<img src="/JC190304/P2_1.jpg" class="">
</li>
<li><p>选择自定义</p>
<img src="/JC190304/P2_2.jpg" class="">
</li>
<li><p>默认即可</p>
<img src="/JC190304/P2_3.jpg" class="">
</li>
<li><p>选择稍后安装操作系统</p>
<img src="/JC190304/P2_4.jpg" class="">
</li>
<li><p>选择下载的Ubuntu系统版本是64位还是32位</p>
<img src="/JC190304/P2_5.jpg" class="">
</li>
<li><p>命名虚拟机名称和选择该虚拟机保存的位置</p>
<img src="/JC190304/P2_6.jpg" class="">
</li>
<li><p>为虚拟机指定处理器配置，默认即可也可以按自己实际电脑配置选择</p>
<img src="/JC190304/P2_7.jpg" class="">
</li>
<li><p>为虚拟机指定内存配置，默认即可推荐2G</p>
<img src="/JC190304/P2_8.jpg" class="">
</li>
<li><p>为虚拟机指定网络配置，默认即可</p>
<img src="/JC190304/P2_9.jpg" class="">
</li>
<li><p>为虚拟机指定I/O控制器类型，默认即可</p>
<img src="/JC190304/P2_10.jpg" class="">
</li>
<li><p>为虚拟机指定磁盘类型，默认即可</p>
<img src="/JC190304/P2_11.jpg" class="">
</li>
<li><p>选择创建新虚拟磁盘</p>
<img src="/JC190304/P2_12.jpg" class="">
</li>
<li><p>指定虚拟机磁盘容量，推荐20G以上。磁盘储存方式两种都可以，我这里使用存储成单个文件</p>
<img src="/JC190304/P2_13.jpg" class="">
</li>
<li><p>命名存储的磁盘文件名，默认即可</p>
<img src="/JC190304/P2_14.jpg" class="">
</li>
<li><p>检查一下刚刚的配置，没问题完成</p>
<img src="/JC190304/P2_15.jpg" class="">
</li>
<li><p>回到初始界面，发现首页出现Ubuntu的虚拟机，选择编辑虚拟机设置</p>
<img src="/JC190304/P2_16.jpg" class="">
</li>
<li><p>左栏硬件选择CD/DVD，右栏选择使用ISO映像文件，选择下载好的Ubuntu镜像文件，确定</p>
<img src="/JC190304/P2_17.jpg" class="">
</li>
<li><p>回到初始界面，选择开启虚拟机，出现下面这个界面</p>
<img src="/JC190304/P2_18.png" class="">
</li>
<li><p>选择Ubuntu系统语言，默认或中文皆可</p>
<img src="/JC190304/P2_19.png" class="">
</li>
<li><p>选择键盘布局，默认即可</p>
<img src="/JC190304/P2_20.png" class="">
</li>
<li><p>选择Ubuntu系统配置，默认即可。我这里为了系统干净选择最小安装，其他选项也一样道理</p>
<img src="/JC190304/P2_21.png" class="">
</li>
<li><p>选择清除整个磁盘并安装，若有其他要求可自行选择</p>
<img src="/JC190304/P2_22.png" class="">
</li>
<li><p>继续</p>
<img src="/JC190304/P2_23.png" class="">
</li>
<li><p>选择时区，输入Shanghai，若有其他要求可自行选择</p>
<img src="/JC190304/P2_24.png" class="">
</li>
<li><p>设定在Ubuntu中的用户名，计算机名和密码</p>
<img src="/JC190304/P2_25.png" class="">
</li>
<li><p>等待安装</p>
<img src="/JC190304/P2_26.png" class="">
</li>
<li><p>安装完成，重启</p>
<img src="/JC190304/P2_27.png" class="">
</li>
<li><p>开机完成，进入系统</p>
<img src="/JC190304/P2_28.png" class="">

</li>
</ol>
<br/>

<hr>
<h1 id="编辑日志"><a href="#编辑日志" class="headerlink" title="编辑日志"></a>编辑日志</h1><p><strong>20/01/21</strong><br>1.&ensp;修改文章名称为【VMware：虚拟机安装Ubuntu指南】<br>2.&ensp;更改文章编码位置</p>
<p><strong>19/05/24</strong><br>1.&ensp;修改文章名称为【VMware虚拟机安装Ubuntu】<br>2.&ensp;更改文章部分引用样式</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>序</title>
    <url>/SB190301/</url>
    <content><![CDATA[<p><em>#SB190301</em><br>可终于搭起来啦，折腾了几天。作为第一篇文章，那就聊一下我之所以建这个博客的目的与初衷以及为什么选择自己搭。</p>
<a id="more"></a>
<p>倘若发现文章有所纰漏或存在不妥之处，还望指正</p>
<h1 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h1><p>在我还在上高中的时候，我就有萌生过自己建一个博客的想法。那时我们学校里面有一个社团，叫「工程设计社」，我也是其中一员。不得不说，在当时存在于高中的社团还是不多的，而这个社团由一群喜欢捣鼓计算机的人建立，平时就是讲解介绍一些计算机概念和一些较为简单的编程语法算法。你可能有听说过「青少年开发者大会」这个活动，其创办人刘敬韬同学当时也就是我们的前社长。我在这个社团里面了解到许多之前从未接触到的东西，像Linux，GPL协议等等。而其中我也是从那第一次知道开源这个词，让我明白有些想法是应该被分享记录的，而这也就是我最初的想要拥有一个博客的原因。</p>
<h1 id="现阶段的原因"><a href="#现阶段的原因" class="headerlink" title="现阶段的原因"></a>现阶段的原因</h1><p>而后，虽然想法可美好，然而现实是残酷的。受限于当时的时间精力（老师和家长整天都看着你呢），建立博客的计划也就不了了之了。上了大学以后，随着自己经验阅历的增加，又跟着老师参加了几个项目。我想是时候把这个计划重新提上日程了。一方面就像上文所说的可以分享一些自己的想法和经验。另一方面呢也能将自己学到的知识还有一些项目经验比较系统地整理记录下来，这样不仅日后查阅起来你可以知道自己以前做过什么，还可以让自己养成写随笔的习惯（趁机治疗一下自己的拖延症），何乐而不为呢。这就是现阶段的建博的原因。</p>
<h1 id="为什么选择自己搭"><a href="#为什么选择自己搭" class="headerlink" title="为什么选择自己搭"></a>为什么选择自己搭</h1><p>再说说为什么会选择搭一个而不是找个现有的类似CSDN，简书之类的平台。首先并不是说这些平台不好，相反现有的平台的功能都非常强大，链接了各种东西。但是带来的问题就是也会带来一些广告和某些”特殊用户”的打扰（就连短信都会遇到）。其次由于我本身对博客定位的原因，也并不需要那么多高级的功能和复杂的界面，可以简简单单可以记录些东西就足矣。当然最最主要原因就是自己不折腾一下就浑身难受哈哈哈。<br>最后，也希望自己能够真正的把这个博客经营下去，做到定时地更新维护。<br>好的，就这样。</p>
<p>2019/3/1</p>
<br/>

<hr>
<h1 id="编辑日志"><a href="#编辑日志" class="headerlink" title="编辑日志"></a>编辑日志</h1><p><strong>20/01/21</strong><br>1.&ensp;更改文章编码位置</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
</search>
